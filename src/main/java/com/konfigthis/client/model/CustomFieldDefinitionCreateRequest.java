/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty;
import com.konfigthis.client.model.ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty;
import com.konfigthis.client.model.TheSelectDefinitionOfTheCustomFieldDefinitionProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CustomFieldDefinitionCreateRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CustomFieldDefinitionCreateRequest {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private Object description = null;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_API_NAME = "apiName";
  @SerializedName(SERIALIZED_NAME_API_NAME)
  private String apiName;

  public static final String SERIALIZED_NAME_MODEL_TYPE = "modelType";
  @SerializedName(SERIALIZED_NAME_MODEL_TYPE)
  private String modelType;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_IS_SENSITIVE = "isSensitive";
  @SerializedName(SERIALIZED_NAME_IS_SENSITIVE)
  private Boolean isSensitive;

  public static final String SERIALIZED_NAME_SELECT_DEFINITION = "selectDefinition";
  @SerializedName(SERIALIZED_NAME_SELECT_DEFINITION)
  private TheSelectDefinitionOfTheCustomFieldDefinitionProperty selectDefinition;

  public static final String SERIALIZED_NAME_TEXT_DEFINITION = "textDefinition";
  @SerializedName(SERIALIZED_NAME_TEXT_DEFINITION)
  private OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty textDefinition;

  public static final String SERIALIZED_NAME_PEOPLE_DROPDOWN_DEFINITION = "peopleDropdownDefinition";
  @SerializedName(SERIALIZED_NAME_PEOPLE_DROPDOWN_DEFINITION)
  private ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty peopleDropdownDefinition;

  public CustomFieldDefinitionCreateRequest() {
  }

  public CustomFieldDefinitionCreateRequest description(Object description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDescription() {
    return description;
  }


  public void setDescription(Object description) {
    
    
    
    this.description = description;
  }


  public CustomFieldDefinitionCreateRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Name given to this [Custom Field Definition](https://developers.intellihr.io/docs/v1/). This name would normally be shown to users of the system.
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Custom Field", required = true, value = "Name given to this [Custom Field Definition](https://developers.intellihr.io/docs/v1/). This name would normally be shown to users of the system.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public CustomFieldDefinitionCreateRequest apiName(String apiName) {
    
    
    
    
    this.apiName = apiName;
    return this;
  }

   /**
   * The api name given to this [Custom Field Definition](https://developers.intellihr.io/docs/v1/). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.
   * @return apiName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "custom_field", required = true, value = "The api name given to this [Custom Field Definition](https://developers.intellihr.io/docs/v1/). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.")

  public String getApiName() {
    return apiName;
  }


  public void setApiName(String apiName) {
    
    
    
    this.apiName = apiName;
  }


  public CustomFieldDefinitionCreateRequest modelType(String modelType) {
    
    
    
    
    this.modelType = modelType;
    return this;
  }

   /**
   * The model that this custom field relates to and can be attached to. Enum: &#x60;ADDRESS&#x60;, &#x60;BUSINESS_ENTITY&#x60;, &#x60;BUSINESS_UNIT&#x60;, &#x60;EMAIL_ADDRESS&#x60;, &#x60;JOB&#x60;, &#x60;LOCATION&#x60;, &#x60;PERSON&#x60;, &#x60;POSITION_TITLE&#x60;, &#x60;PHONE_NUMBER&#x60;, &#x60;REMUNERATION&#x60;, &#x60;TRAINING&#x60;.
   * @return modelType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "PERSON", required = true, value = "The model that this custom field relates to and can be attached to. Enum: `ADDRESS`, `BUSINESS_ENTITY`, `BUSINESS_UNIT`, `EMAIL_ADDRESS`, `JOB`, `LOCATION`, `PERSON`, `POSITION_TITLE`, `PHONE_NUMBER`, `REMUNERATION`, `TRAINING`.")

  public String getModelType() {
    return modelType;
  }


  public void setModelType(String modelType) {
    
    
    
    this.modelType = modelType;
  }


  public CustomFieldDefinitionCreateRequest type(String type) {
    
    
    
    
    this.type = type;
    return this;
  }

   /**
   * The type of data this field records. Enum: &#x60;SINGLE_SELECT&#x60;, &#x60;MULTI_SELECT&#x60;, &#x60;TEXT&#x60;, &#x60;NUMBER&#x60;, &#x60;PEOPLE_DROPDOWN&#x60;.
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "TEXT", required = true, value = "The type of data this field records. Enum: `SINGLE_SELECT`, `MULTI_SELECT`, `TEXT`, `NUMBER`, `PEOPLE_DROPDOWN`.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    
    
    
    this.type = type;
  }


  public CustomFieldDefinitionCreateRequest isSensitive(Boolean isSensitive) {
    
    
    
    
    this.isSensitive = isSensitive;
    return this;
  }

   /**
   * Whether or not this [Custom Field Definition](https://developers.intellihr.io/docs/v1/) is marked as sensitive information.
   * @return isSensitive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether or not this [Custom Field Definition](https://developers.intellihr.io/docs/v1/) is marked as sensitive information.")

  public Boolean getIsSensitive() {
    return isSensitive;
  }


  public void setIsSensitive(Boolean isSensitive) {
    
    
    
    this.isSensitive = isSensitive;
  }


  public CustomFieldDefinitionCreateRequest selectDefinition(TheSelectDefinitionOfTheCustomFieldDefinitionProperty selectDefinition) {
    
    
    
    
    this.selectDefinition = selectDefinition;
    return this;
  }

   /**
   * Get selectDefinition
   * @return selectDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TheSelectDefinitionOfTheCustomFieldDefinitionProperty getSelectDefinition() {
    return selectDefinition;
  }


  public void setSelectDefinition(TheSelectDefinitionOfTheCustomFieldDefinitionProperty selectDefinition) {
    
    
    
    this.selectDefinition = selectDefinition;
  }


  public CustomFieldDefinitionCreateRequest textDefinition(OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty textDefinition) {
    
    
    
    
    this.textDefinition = textDefinition;
    return this;
  }

   /**
   * Get textDefinition
   * @return textDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty getTextDefinition() {
    return textDefinition;
  }


  public void setTextDefinition(OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty textDefinition) {
    
    
    
    this.textDefinition = textDefinition;
  }


  public CustomFieldDefinitionCreateRequest peopleDropdownDefinition(ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty peopleDropdownDefinition) {
    
    
    
    
    this.peopleDropdownDefinition = peopleDropdownDefinition;
    return this;
  }

   /**
   * Get peopleDropdownDefinition
   * @return peopleDropdownDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty getPeopleDropdownDefinition() {
    return peopleDropdownDefinition;
  }


  public void setPeopleDropdownDefinition(ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty peopleDropdownDefinition) {
    
    
    
    this.peopleDropdownDefinition = peopleDropdownDefinition;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CustomFieldDefinitionCreateRequest instance itself
   */
  public CustomFieldDefinitionCreateRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomFieldDefinitionCreateRequest customFieldDefinitionCreateRequest = (CustomFieldDefinitionCreateRequest) o;
    return Objects.equals(this.description, customFieldDefinitionCreateRequest.description) &&
        Objects.equals(this.name, customFieldDefinitionCreateRequest.name) &&
        Objects.equals(this.apiName, customFieldDefinitionCreateRequest.apiName) &&
        Objects.equals(this.modelType, customFieldDefinitionCreateRequest.modelType) &&
        Objects.equals(this.type, customFieldDefinitionCreateRequest.type) &&
        Objects.equals(this.isSensitive, customFieldDefinitionCreateRequest.isSensitive) &&
        Objects.equals(this.selectDefinition, customFieldDefinitionCreateRequest.selectDefinition) &&
        Objects.equals(this.textDefinition, customFieldDefinitionCreateRequest.textDefinition) &&
        Objects.equals(this.peopleDropdownDefinition, customFieldDefinitionCreateRequest.peopleDropdownDefinition)&&
        Objects.equals(this.additionalProperties, customFieldDefinitionCreateRequest.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, name, apiName, modelType, type, isSensitive, selectDefinition, textDefinition, peopleDropdownDefinition, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomFieldDefinitionCreateRequest {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    apiName: ").append(toIndentedString(apiName)).append("\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isSensitive: ").append(toIndentedString(isSensitive)).append("\n");
    sb.append("    selectDefinition: ").append(toIndentedString(selectDefinition)).append("\n");
    sb.append("    textDefinition: ").append(toIndentedString(textDefinition)).append("\n");
    sb.append("    peopleDropdownDefinition: ").append(toIndentedString(peopleDropdownDefinition)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("name");
    openapiFields.add("apiName");
    openapiFields.add("modelType");
    openapiFields.add("type");
    openapiFields.add("isSensitive");
    openapiFields.add("selectDefinition");
    openapiFields.add("textDefinition");
    openapiFields.add("peopleDropdownDefinition");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("apiName");
    openapiRequiredFields.add("modelType");
    openapiRequiredFields.add("type");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CustomFieldDefinitionCreateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CustomFieldDefinitionCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomFieldDefinitionCreateRequest is not found in the empty JSON string", CustomFieldDefinitionCreateRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomFieldDefinitionCreateRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("apiName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiName").toString()));
      }
      if (!jsonObj.get("modelType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelType").toString()));
      }
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `selectDefinition`
      if (jsonObj.get("selectDefinition") != null && !jsonObj.get("selectDefinition").isJsonNull()) {
        TheSelectDefinitionOfTheCustomFieldDefinitionProperty.validateJsonObject(jsonObj.getAsJsonObject("selectDefinition"));
      }
      // validate the optional field `textDefinition`
      if (jsonObj.get("textDefinition") != null && !jsonObj.get("textDefinition").isJsonNull()) {
        OptionallyAddTextValidationOfTheCustomFieldDefinitionProperty.validateJsonObject(jsonObj.getAsJsonObject("textDefinition"));
      }
      // validate the optional field `peopleDropdownDefinition`
      if (jsonObj.get("peopleDropdownDefinition") != null && !jsonObj.get("peopleDropdownDefinition").isJsonNull()) {
        ThePeopleDropdownDefinitionOfTheCustomFieldDefinitionProperty.validateJsonObject(jsonObj.getAsJsonObject("peopleDropdownDefinition"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomFieldDefinitionCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomFieldDefinitionCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomFieldDefinitionCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomFieldDefinitionCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomFieldDefinitionCreateRequest>() {
           @Override
           public void write(JsonWriter out, CustomFieldDefinitionCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomFieldDefinitionCreateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CustomFieldDefinitionCreateRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomFieldDefinitionCreateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomFieldDefinitionCreateRequest
  * @throws IOException if the JSON string is invalid with respect to CustomFieldDefinitionCreateRequest
  */
  public static CustomFieldDefinitionCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomFieldDefinitionCreateRequest.class);
  }

 /**
  * Convert an instance of CustomFieldDefinitionCreateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

