/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BusinessEntitiesPatchRequestCustomFieldsValue;
import com.konfigthis.client.model.JobPatchRequestBusinessEntity;
import com.konfigthis.client.model.JobPatchRequestBusinessUnit;
import com.konfigthis.client.model.JobPatchRequestEmploymentCondition;
import com.konfigthis.client.model.JobPatchRequestEstablishment;
import com.konfigthis.client.model.JobPatchRequestJobChangeReason;
import com.konfigthis.client.model.JobPatchRequestLocation;
import com.konfigthis.client.model.JobPatchRequestPayGrade;
import com.konfigthis.client.model.JobPatchRequestRemunerationSchedule;
import com.konfigthis.client.model.JobPatchRequestSupervisorJob;
import com.konfigthis.client.model.JobPatchRequestSupervisorPerson;
import com.konfigthis.client.model.JobPatchRequestWorkClass;
import com.konfigthis.client.model.JobPatchRequestWorkType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * JobPatchRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class JobPatchRequest {
  public static final String SERIALIZED_NAME_EFFECTIVE_FROM = "effectiveFrom";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_FROM)
  private Object effectiveFrom = null;

  public static final String SERIALIZED_NAME_EFFECTIVE_TO = "effectiveTo";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_TO)
  private String effectiveTo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BUSINESS_ENTITY = "businessEntity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ENTITY)
  private JobPatchRequestBusinessEntity businessEntity;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private JobPatchRequestBusinessUnit businessUnit;

  public static final String SERIALIZED_NAME_ESTABLISHMENT = "establishment";
  @SerializedName(SERIALIZED_NAME_ESTABLISHMENT)
  private JobPatchRequestEstablishment establishment;

  public static final String SERIALIZED_NAME_JOB_CHANGE_REASON = "jobChangeReason";
  @SerializedName(SERIALIZED_NAME_JOB_CHANGE_REASON)
  private JobPatchRequestJobChangeReason jobChangeReason;

  public static final String SERIALIZED_NAME_SUPERVISOR_PERSON = "supervisorPerson";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_PERSON)
  private JobPatchRequestSupervisorPerson supervisorPerson;

  public static final String SERIALIZED_NAME_SUPERVISOR_JOB = "supervisorJob";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_JOB)
  private JobPatchRequestSupervisorJob supervisorJob;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private JobPatchRequestLocation location;

  public static final String SERIALIZED_NAME_WORK_CLASS = "workClass";
  @SerializedName(SERIALIZED_NAME_WORK_CLASS)
  private JobPatchRequestWorkClass workClass;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private JobPatchRequestWorkType workType;

  public static final String SERIALIZED_NAME_FTE = "fte";
  @SerializedName(SERIALIZED_NAME_FTE)
  private String fte;

  public static final String SERIALIZED_NAME_PAY_GRADE = "payGrade";
  @SerializedName(SERIALIZED_NAME_PAY_GRADE)
  private JobPatchRequestPayGrade payGrade;

  public static final String SERIALIZED_NAME_EMPLOYMENT_CONDITION = "employmentCondition";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_CONDITION)
  private JobPatchRequestEmploymentCondition employmentCondition;

  public static final String SERIALIZED_NAME_REMUNERATION_SCHEDULE = "remunerationSchedule";
  @SerializedName(SERIALIZED_NAME_REMUNERATION_SCHEDULE)
  private JobPatchRequestRemunerationSchedule remunerationSchedule;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> customFields = null;

  public JobPatchRequest() {
  }

  public JobPatchRequest effectiveFrom(Object effectiveFrom) {
    
    
    
    
    this.effectiveFrom = effectiveFrom;
    return this;
  }

   /**
   * Get effectiveFrom
   * @return effectiveFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")

  public Object getEffectiveFrom() {
    return effectiveFrom;
  }


  public void setEffectiveFrom(Object effectiveFrom) {
    
    
    
    this.effectiveFrom = effectiveFrom;
  }


  public JobPatchRequest effectiveTo(String effectiveTo) {
    
    
    
    
    this.effectiveTo = effectiveTo;
    return this;
  }

   /**
   * The date this [Job](https://developers.intellihr.io/docs/v1/) Update is effective to within the organisation. Note that this doesn&#39;t affect the end date of the overall job itself. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return effectiveTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The date this [Job](https://developers.intellihr.io/docs/v1/) Update is effective to within the organisation. Note that this doesn't affect the end date of the overall job itself. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getEffectiveTo() {
    return effectiveTo;
  }


  public void setEffectiveTo(String effectiveTo) {
    
    
    
    this.effectiveTo = effectiveTo;
  }


  public JobPatchRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The job name to be updated. Will attempt to match to an existing [Position Title](https://developers.intellihr.io/docs/v1/), otherwise creates a new [Position Title](https://developers.intellihr.io/docs/v1/).
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Food Scientist", value = "The job name to be updated. Will attempt to match to an existing [Position Title](https://developers.intellihr.io/docs/v1/), otherwise creates a new [Position Title](https://developers.intellihr.io/docs/v1/).")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public JobPatchRequest businessEntity(JobPatchRequestBusinessEntity businessEntity) {
    
    
    
    
    this.businessEntity = businessEntity;
    return this;
  }

   /**
   * Get businessEntity
   * @return businessEntity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestBusinessEntity getBusinessEntity() {
    return businessEntity;
  }


  public void setBusinessEntity(JobPatchRequestBusinessEntity businessEntity) {
    
    
    
    this.businessEntity = businessEntity;
  }


  public JobPatchRequest businessUnit(JobPatchRequestBusinessUnit businessUnit) {
    
    
    
    
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * Get businessUnit
   * @return businessUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestBusinessUnit getBusinessUnit() {
    return businessUnit;
  }


  public void setBusinessUnit(JobPatchRequestBusinessUnit businessUnit) {
    
    
    
    this.businessUnit = businessUnit;
  }


  public JobPatchRequest establishment(JobPatchRequestEstablishment establishment) {
    
    
    
    
    this.establishment = establishment;
    return this;
  }

   /**
   * Get establishment
   * @return establishment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestEstablishment getEstablishment() {
    return establishment;
  }


  public void setEstablishment(JobPatchRequestEstablishment establishment) {
    
    
    
    this.establishment = establishment;
  }


  public JobPatchRequest jobChangeReason(JobPatchRequestJobChangeReason jobChangeReason) {
    
    
    
    
    this.jobChangeReason = jobChangeReason;
    return this;
  }

   /**
   * Get jobChangeReason
   * @return jobChangeReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestJobChangeReason getJobChangeReason() {
    return jobChangeReason;
  }


  public void setJobChangeReason(JobPatchRequestJobChangeReason jobChangeReason) {
    
    
    
    this.jobChangeReason = jobChangeReason;
  }


  public JobPatchRequest supervisorPerson(JobPatchRequestSupervisorPerson supervisorPerson) {
    
    
    
    
    this.supervisorPerson = supervisorPerson;
    return this;
  }

   /**
   * Get supervisorPerson
   * @return supervisorPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestSupervisorPerson getSupervisorPerson() {
    return supervisorPerson;
  }


  public void setSupervisorPerson(JobPatchRequestSupervisorPerson supervisorPerson) {
    
    
    
    this.supervisorPerson = supervisorPerson;
  }


  public JobPatchRequest supervisorJob(JobPatchRequestSupervisorJob supervisorJob) {
    
    
    
    
    this.supervisorJob = supervisorJob;
    return this;
  }

   /**
   * Get supervisorJob
   * @return supervisorJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestSupervisorJob getSupervisorJob() {
    return supervisorJob;
  }


  public void setSupervisorJob(JobPatchRequestSupervisorJob supervisorJob) {
    
    
    
    this.supervisorJob = supervisorJob;
  }


  public JobPatchRequest location(JobPatchRequestLocation location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestLocation getLocation() {
    return location;
  }


  public void setLocation(JobPatchRequestLocation location) {
    
    
    
    this.location = location;
  }


  public JobPatchRequest workClass(JobPatchRequestWorkClass workClass) {
    
    
    
    
    this.workClass = workClass;
    return this;
  }

   /**
   * Get workClass
   * @return workClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestWorkClass getWorkClass() {
    return workClass;
  }


  public void setWorkClass(JobPatchRequestWorkClass workClass) {
    
    
    
    this.workClass = workClass;
  }


  public JobPatchRequest workType(JobPatchRequestWorkType workType) {
    
    
    
    
    this.workType = workType;
    return this;
  }

   /**
   * Get workType
   * @return workType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestWorkType getWorkType() {
    return workType;
  }


  public void setWorkType(JobPatchRequestWorkType workType) {
    
    
    
    this.workType = workType;
  }


  public JobPatchRequest fte(String fte) {
    
    
    
    
    this.fte = fte;
    return this;
  }

   /**
   * The full time equivalent of this [Job](https://developers.intellihr.io/docs/v1/). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.
   * @return fte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The full time equivalent of this [Job](https://developers.intellihr.io/docs/v1/). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.")

  public String getFte() {
    return fte;
  }


  public void setFte(String fte) {
    
    
    
    this.fte = fte;
  }


  public JobPatchRequest payGrade(JobPatchRequestPayGrade payGrade) {
    
    
    
    
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Get payGrade
   * @return payGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestPayGrade getPayGrade() {
    return payGrade;
  }


  public void setPayGrade(JobPatchRequestPayGrade payGrade) {
    
    
    
    this.payGrade = payGrade;
  }


  public JobPatchRequest employmentCondition(JobPatchRequestEmploymentCondition employmentCondition) {
    
    
    
    
    this.employmentCondition = employmentCondition;
    return this;
  }

   /**
   * Get employmentCondition
   * @return employmentCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestEmploymentCondition getEmploymentCondition() {
    return employmentCondition;
  }


  public void setEmploymentCondition(JobPatchRequestEmploymentCondition employmentCondition) {
    
    
    
    this.employmentCondition = employmentCondition;
  }


  public JobPatchRequest remunerationSchedule(JobPatchRequestRemunerationSchedule remunerationSchedule) {
    
    
    
    
    this.remunerationSchedule = remunerationSchedule;
    return this;
  }

   /**
   * Get remunerationSchedule
   * @return remunerationSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobPatchRequestRemunerationSchedule getRemunerationSchedule() {
    return remunerationSchedule;
  }


  public void setRemunerationSchedule(JobPatchRequestRemunerationSchedule remunerationSchedule) {
    
    
    
    this.remunerationSchedule = remunerationSchedule;
  }


  public JobPatchRequest customFields(Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public JobPatchRequest putCustomFieldsItem(String key, BusinessEntitiesPatchRequestCustomFieldsValue customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * The custom field values for this Job
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"text_field_api_name\":{\"value\":\"Some text value\"},\"numeric_field_api_name\":{\"value\":\"50\"},\"single_select_api_name\":{\"value\":{\"label\":\"Drama\"}},\"multi_select_api_name\":{\"value\":{\"labels\":[\"Bananas\",\"Apples\"]}},\"people_dropdown_api_name\":{\"value\":[{\"person\":{\"id\":\"8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9X\",\"name\":\"Bruce Wayne\",\"primaryEmailAddress\":\"bruce.wayne@example.com\",\"employeeNumber\":\"00001\",\"autoIncrementIntellihrId\":\"1000\"},\"job\":{\"id\":\"569904c8-5d36-4c2f-afb0-525eeb8da32dX\",\"name\":\"Maintenance worker\"}},{\"person\":{\"id\":\"313fde44-f24e-4ec9-9473-0d0f3527222dX\",\"name\":\"Batman\",\"primaryEmailAddress\":\"batman@example.com\",\"employeeNumber\":\"00002\",\"autoIncrementIntellihrId\":\"1001\"},\"job\":{\"id\":\"653304c8-5d36-4c2f-afb0-525eeb8da32dX\",\"name\":\"Janitor\"}}]}}", value = "The custom field values for this Job")

  public Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> customFields) {
    
    
    
    this.customFields = customFields;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the JobPatchRequest instance itself
   */
  public JobPatchRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobPatchRequest jobPatchRequest = (JobPatchRequest) o;
    return Objects.equals(this.effectiveFrom, jobPatchRequest.effectiveFrom) &&
        Objects.equals(this.effectiveTo, jobPatchRequest.effectiveTo) &&
        Objects.equals(this.name, jobPatchRequest.name) &&
        Objects.equals(this.businessEntity, jobPatchRequest.businessEntity) &&
        Objects.equals(this.businessUnit, jobPatchRequest.businessUnit) &&
        Objects.equals(this.establishment, jobPatchRequest.establishment) &&
        Objects.equals(this.jobChangeReason, jobPatchRequest.jobChangeReason) &&
        Objects.equals(this.supervisorPerson, jobPatchRequest.supervisorPerson) &&
        Objects.equals(this.supervisorJob, jobPatchRequest.supervisorJob) &&
        Objects.equals(this.location, jobPatchRequest.location) &&
        Objects.equals(this.workClass, jobPatchRequest.workClass) &&
        Objects.equals(this.workType, jobPatchRequest.workType) &&
        Objects.equals(this.fte, jobPatchRequest.fte) &&
        Objects.equals(this.payGrade, jobPatchRequest.payGrade) &&
        Objects.equals(this.employmentCondition, jobPatchRequest.employmentCondition) &&
        Objects.equals(this.remunerationSchedule, jobPatchRequest.remunerationSchedule) &&
        Objects.equals(this.customFields, jobPatchRequest.customFields)&&
        Objects.equals(this.additionalProperties, jobPatchRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(effectiveFrom, effectiveTo, name, businessEntity, businessUnit, establishment, jobChangeReason, supervisorPerson, supervisorJob, location, workClass, workType, fte, payGrade, employmentCondition, remunerationSchedule, customFields, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobPatchRequest {\n");
    sb.append("    effectiveFrom: ").append(toIndentedString(effectiveFrom)).append("\n");
    sb.append("    effectiveTo: ").append(toIndentedString(effectiveTo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    businessEntity: ").append(toIndentedString(businessEntity)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    establishment: ").append(toIndentedString(establishment)).append("\n");
    sb.append("    jobChangeReason: ").append(toIndentedString(jobChangeReason)).append("\n");
    sb.append("    supervisorPerson: ").append(toIndentedString(supervisorPerson)).append("\n");
    sb.append("    supervisorJob: ").append(toIndentedString(supervisorJob)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    workClass: ").append(toIndentedString(workClass)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    fte: ").append(toIndentedString(fte)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    employmentCondition: ").append(toIndentedString(employmentCondition)).append("\n");
    sb.append("    remunerationSchedule: ").append(toIndentedString(remunerationSchedule)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("effectiveFrom");
    openapiFields.add("effectiveTo");
    openapiFields.add("name");
    openapiFields.add("businessEntity");
    openapiFields.add("businessUnit");
    openapiFields.add("establishment");
    openapiFields.add("jobChangeReason");
    openapiFields.add("supervisorPerson");
    openapiFields.add("supervisorJob");
    openapiFields.add("location");
    openapiFields.add("workClass");
    openapiFields.add("workType");
    openapiFields.add("fte");
    openapiFields.add("payGrade");
    openapiFields.add("employmentCondition");
    openapiFields.add("remunerationSchedule");
    openapiFields.add("customFields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("effectiveFrom");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobPatchRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobPatchRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobPatchRequest is not found in the empty JSON string", JobPatchRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : JobPatchRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("effectiveTo") != null && !jsonObj.get("effectiveTo").isJsonNull()) && !jsonObj.get("effectiveTo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `effectiveTo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("effectiveTo").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `businessEntity`
      if (jsonObj.get("businessEntity") != null && !jsonObj.get("businessEntity").isJsonNull()) {
        JobPatchRequestBusinessEntity.validateJsonObject(jsonObj.getAsJsonObject("businessEntity"));
      }
      // validate the optional field `businessUnit`
      if (jsonObj.get("businessUnit") != null && !jsonObj.get("businessUnit").isJsonNull()) {
        JobPatchRequestBusinessUnit.validateJsonObject(jsonObj.getAsJsonObject("businessUnit"));
      }
      // validate the optional field `establishment`
      if (jsonObj.get("establishment") != null && !jsonObj.get("establishment").isJsonNull()) {
        JobPatchRequestEstablishment.validateJsonObject(jsonObj.getAsJsonObject("establishment"));
      }
      // validate the optional field `jobChangeReason`
      if (jsonObj.get("jobChangeReason") != null && !jsonObj.get("jobChangeReason").isJsonNull()) {
        JobPatchRequestJobChangeReason.validateJsonObject(jsonObj.getAsJsonObject("jobChangeReason"));
      }
      // validate the optional field `supervisorPerson`
      if (jsonObj.get("supervisorPerson") != null && !jsonObj.get("supervisorPerson").isJsonNull()) {
        JobPatchRequestSupervisorPerson.validateJsonObject(jsonObj.getAsJsonObject("supervisorPerson"));
      }
      // validate the optional field `supervisorJob`
      if (jsonObj.get("supervisorJob") != null && !jsonObj.get("supervisorJob").isJsonNull()) {
        JobPatchRequestSupervisorJob.validateJsonObject(jsonObj.getAsJsonObject("supervisorJob"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        JobPatchRequestLocation.validateJsonObject(jsonObj.getAsJsonObject("location"));
      }
      // validate the optional field `workClass`
      if (jsonObj.get("workClass") != null && !jsonObj.get("workClass").isJsonNull()) {
        JobPatchRequestWorkClass.validateJsonObject(jsonObj.getAsJsonObject("workClass"));
      }
      // validate the optional field `workType`
      if (jsonObj.get("workType") != null && !jsonObj.get("workType").isJsonNull()) {
        JobPatchRequestWorkType.validateJsonObject(jsonObj.getAsJsonObject("workType"));
      }
      if ((jsonObj.get("fte") != null && !jsonObj.get("fte").isJsonNull()) && !jsonObj.get("fte").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fte` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fte").toString()));
      }
      // validate the optional field `payGrade`
      if (jsonObj.get("payGrade") != null && !jsonObj.get("payGrade").isJsonNull()) {
        JobPatchRequestPayGrade.validateJsonObject(jsonObj.getAsJsonObject("payGrade"));
      }
      // validate the optional field `employmentCondition`
      if (jsonObj.get("employmentCondition") != null && !jsonObj.get("employmentCondition").isJsonNull()) {
        JobPatchRequestEmploymentCondition.validateJsonObject(jsonObj.getAsJsonObject("employmentCondition"));
      }
      // validate the optional field `remunerationSchedule`
      if (jsonObj.get("remunerationSchedule") != null && !jsonObj.get("remunerationSchedule").isJsonNull()) {
        JobPatchRequestRemunerationSchedule.validateJsonObject(jsonObj.getAsJsonObject("remunerationSchedule"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobPatchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobPatchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobPatchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobPatchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<JobPatchRequest>() {
           @Override
           public void write(JsonWriter out, JobPatchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public JobPatchRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             JobPatchRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobPatchRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobPatchRequest
  * @throws IOException if the JSON string is invalid with respect to JobPatchRequest
  */
  public static JobPatchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobPatchRequest.class);
  }

 /**
  * Convert an instance of JobPatchRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

