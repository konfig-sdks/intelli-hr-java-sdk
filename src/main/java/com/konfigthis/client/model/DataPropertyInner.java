/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldsResponse;
import com.konfigthis.client.model.DataPropertyInnerAddressesInner;
import com.konfigthis.client.model.DataPropertyInnerEmailAddressesInner;
import com.konfigthis.client.model.DataPropertyInnerEmergencyContact;
import com.konfigthis.client.model.DataPropertyInnerJobsInner;
import com.konfigthis.client.model.DataPropertyInnerMedicalConditionsInner;
import com.konfigthis.client.model.DataPropertyInnerPhoneNumbersInner;
import com.konfigthis.client.model.DataPropertyInnerWorkRights;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DataPropertyInner
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DataPropertyInner {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Object title = null;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private Object firstName = null;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private Object middleName = null;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PREFERRED_NAME = "preferredName";
  @SerializedName(SERIALIZED_NAME_PREFERRED_NAME)
  private Object preferredName = null;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private Object dateOfBirth = null;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_IS_SUPERVISOR = "isSupervisor";
  @SerializedName(SERIALIZED_NAME_IS_SUPERVISOR)
  private Boolean isSupervisor;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private Object employeeNumber = null;

  public static final String SERIALIZED_NAME_AUTO_INCREMENT_INTELLIHR_ID = "autoIncrementIntellihrId";
  @SerializedName(SERIALIZED_NAME_AUTO_INCREMENT_INTELLIHR_ID)
  private Double autoIncrementIntellihrId;

  public static final String SERIALIZED_NAME_MEDICAL_CONDITIONS = "medicalConditions";
  @SerializedName(SERIALIZED_NAME_MEDICAL_CONDITIONS)
  private List<DataPropertyInnerMedicalConditionsInner> medicalConditions = null;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESSES = "emailAddresses";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESSES)
  private List<DataPropertyInnerEmailAddressesInner> emailAddresses = null;

  public static final String SERIALIZED_NAME_EMERGENCY_CONTACT = "emergencyContact";
  @SerializedName(SERIALIZED_NAME_EMERGENCY_CONTACT)
  private DataPropertyInnerEmergencyContact emergencyContact;

  public static final String SERIALIZED_NAME_EMPLOYMENT_STATUS = "employmentStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_STATUS)
  private String employmentStatus;

  public static final String SERIALIZED_NAME_JOBS = "jobs";
  @SerializedName(SERIALIZED_NAME_JOBS)
  private List<DataPropertyInnerJobsInner> jobs = null;

  public static final String SERIALIZED_NAME_WORK_RIGHTS = "workRights";
  @SerializedName(SERIALIZED_NAME_WORK_RIGHTS)
  private DataPropertyInnerWorkRights workRights;

  public static final String SERIALIZED_NAME_PRIMARY_EMAIL_ADDRESS = "primaryEmailAddress";
  @SerializedName(SERIALIZED_NAME_PRIMARY_EMAIL_ADDRESS)
  private Object primaryEmailAddress = null;

  public static final String SERIALIZED_NAME_PRIMARY_PHONE_NUMBER = "primaryPhoneNumber";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PHONE_NUMBER)
  private Object primaryPhoneNumber = null;

  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<DataPropertyInnerAddressesInner> addresses = null;

  public static final String SERIALIZED_NAME_PHONE_NUMBERS = "phoneNumbers";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBERS)
  private List<DataPropertyInnerPhoneNumbersInner> phoneNumbers = null;

  public static final String SERIALIZED_NAME_USER_ACCOUNT = "userAccount";
  @SerializedName(SERIALIZED_NAME_USER_ACCOUNT)
  private Object userAccount = null;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private CustomFieldsResponse customFields = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public DataPropertyInner() {
  }

  public DataPropertyInner title(Object title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTitle() {
    return title;
  }


  public void setTitle(Object title) {
    
    
    
    this.title = title;
  }


  public DataPropertyInner id(String id) {
    
    
    if (id != null && id.length() < 36) {
      throw new IllegalArgumentException("Invalid value for id. Length must be greater than or equal to 36.");
    }
    
    this.id = id;
    return this;
  }

   /**
   * The identifier string for the [Person](https://developers.intellihr.io/docs/v1/).
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9", value = "The identifier string for the [Person](https://developers.intellihr.io/docs/v1/).")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    if (id != null && id.length() < 36) {
      throw new IllegalArgumentException("Invalid value for id. Length must be greater than or equal to 36.");
    }
    this.id = id;
  }


  public DataPropertyInner displayName(String displayName) {
    
    
    
    
    this.displayName = displayName;
    return this;
  }

   /**
   * Name to display throughout the system for this [Person](https://developers.intellihr.io/docs/v1/). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.
   * @return displayName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Batman (Bruce) Wayne", value = "Name to display throughout the system for this [Person](https://developers.intellihr.io/docs/v1/). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.")

  public String getDisplayName() {
    return displayName;
  }


  public void setDisplayName(String displayName) {
    
    
    
    this.displayName = displayName;
  }


  public DataPropertyInner firstName(Object firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFirstName() {
    return firstName;
  }


  public void setFirstName(Object firstName) {
    
    
    
    this.firstName = firstName;
  }


  public DataPropertyInner middleName(Object middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getMiddleName() {
    return middleName;
  }


  public void setMiddleName(Object middleName) {
    
    
    
    this.middleName = middleName;
  }


  public DataPropertyInner lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * The [Person&#39;s](https://developers.intellihr.io/docs/v1/) Last Name.
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Wayne", value = "The [Person's](https://developers.intellihr.io/docs/v1/) Last Name.")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public DataPropertyInner preferredName(Object preferredName) {
    
    
    
    
    this.preferredName = preferredName;
    return this;
  }

   /**
   * Get preferredName
   * @return preferredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPreferredName() {
    return preferredName;
  }


  public void setPreferredName(Object preferredName) {
    
    
    
    this.preferredName = preferredName;
  }


  public DataPropertyInner dateOfBirth(Object dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(Object dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public DataPropertyInner gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Human readable string for the [Person&#39;s](https://developers.intellihr.io/docs/v1/) gender. Enum: &#x60;Female&#x60;, &#x60;Male&#x60;, &#x60;Non-binary&#x60;, &#x60;Other&#x60;, &#x60;Undisclosed&#x60;.
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Male", value = "Human readable string for the [Person's](https://developers.intellihr.io/docs/v1/) gender. Enum: `Female`, `Male`, `Non-binary`, `Other`, `Undisclosed`.")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public DataPropertyInner isSupervisor(Boolean isSupervisor) {
    
    
    
    
    this.isSupervisor = isSupervisor;
    return this;
  }

   /**
   * If this [Person](https://developers.intellihr.io/docs/v1/) is currently a supervisor or not
   * @return isSupervisor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "If this [Person](https://developers.intellihr.io/docs/v1/) is currently a supervisor or not")

  public Boolean getIsSupervisor() {
    return isSupervisor;
  }


  public void setIsSupervisor(Boolean isSupervisor) {
    
    
    
    this.isSupervisor = isSupervisor;
  }


  public DataPropertyInner employeeNumber(Object employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(Object employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public DataPropertyInner autoIncrementIntellihrId(Double autoIncrementIntellihrId) {
    
    
    
    
    this.autoIncrementIntellihrId = autoIncrementIntellihrId;
    return this;
  }

  public DataPropertyInner autoIncrementIntellihrId(Integer autoIncrementIntellihrId) {
    
    
    
    
    this.autoIncrementIntellihrId = autoIncrementIntellihrId.doubleValue();
    return this;
  }

   /**
   * An autogenerated number that uniquely identifies a [Person](https://developers.intellihr.io/docs/v1/) in intelliHR. It may be hidden in the system&#39;s UI depending upon your tenant&#39;s configuration.
   * @return autoIncrementIntellihrId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "An autogenerated number that uniquely identifies a [Person](https://developers.intellihr.io/docs/v1/) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.")

  public Double getAutoIncrementIntellihrId() {
    return autoIncrementIntellihrId;
  }


  public void setAutoIncrementIntellihrId(Double autoIncrementIntellihrId) {
    
    
    
    this.autoIncrementIntellihrId = autoIncrementIntellihrId;
  }


  public DataPropertyInner medicalConditions(List<DataPropertyInnerMedicalConditionsInner> medicalConditions) {
    
    
    
    
    this.medicalConditions = medicalConditions;
    return this;
  }

  public DataPropertyInner addMedicalConditionsItem(DataPropertyInnerMedicalConditionsInner medicalConditionsItem) {
    if (this.medicalConditions == null) {
      this.medicalConditions = new ArrayList<>();
    }
    this.medicalConditions.add(medicalConditionsItem);
    return this;
  }

   /**
   * An array of medical conditions that belong to this Person.
   * @return medicalConditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of medical conditions that belong to this Person.")

  public List<DataPropertyInnerMedicalConditionsInner> getMedicalConditions() {
    return medicalConditions;
  }


  public void setMedicalConditions(List<DataPropertyInnerMedicalConditionsInner> medicalConditions) {
    
    
    
    this.medicalConditions = medicalConditions;
  }


  public DataPropertyInner emailAddresses(List<DataPropertyInnerEmailAddressesInner> emailAddresses) {
    
    
    
    
    this.emailAddresses = emailAddresses;
    return this;
  }

  public DataPropertyInner addEmailAddressesItem(DataPropertyInnerEmailAddressesInner emailAddressesItem) {
    if (this.emailAddresses == null) {
      this.emailAddresses = new ArrayList<>();
    }
    this.emailAddresses.add(emailAddressesItem);
    return this;
  }

   /**
   * An array of email addresses that belong to this Person.
   * @return emailAddresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of email addresses that belong to this Person.")

  public List<DataPropertyInnerEmailAddressesInner> getEmailAddresses() {
    return emailAddresses;
  }


  public void setEmailAddresses(List<DataPropertyInnerEmailAddressesInner> emailAddresses) {
    
    
    
    this.emailAddresses = emailAddresses;
  }


  public DataPropertyInner emergencyContact(DataPropertyInnerEmergencyContact emergencyContact) {
    
    
    
    
    this.emergencyContact = emergencyContact;
    return this;
  }

   /**
   * Get emergencyContact
   * @return emergencyContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataPropertyInnerEmergencyContact getEmergencyContact() {
    return emergencyContact;
  }


  public void setEmergencyContact(DataPropertyInnerEmergencyContact emergencyContact) {
    
    
    
    this.emergencyContact = emergencyContact;
  }


  public DataPropertyInner employmentStatus(String employmentStatus) {
    
    
    
    
    this.employmentStatus = employmentStatus;
    return this;
  }

   /**
   * The current status of this [Persons](https://developers.intellihr.io/docs/v1/) within the organisation. Enum: &#x60;Current Staff&#x60;, &#x60;Exiting Staff&#x60;, &#x60;No Job Records&#x60;, &#x60;Past Staff&#x60;, &#x60;Returning Staff&#x60;, &#x60;Upcoming Staff&#x60;.
   * @return employmentStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Current Staff", value = "The current status of this [Persons](https://developers.intellihr.io/docs/v1/) within the organisation. Enum: `Current Staff`, `Exiting Staff`, `No Job Records`, `Past Staff`, `Returning Staff`, `Upcoming Staff`.")

  public String getEmploymentStatus() {
    return employmentStatus;
  }


  public void setEmploymentStatus(String employmentStatus) {
    
    
    
    this.employmentStatus = employmentStatus;
  }


  public DataPropertyInner jobs(List<DataPropertyInnerJobsInner> jobs) {
    
    
    
    
    this.jobs = jobs;
    return this;
  }

  public DataPropertyInner addJobsItem(DataPropertyInnerJobsInner jobsItem) {
    if (this.jobs == null) {
      this.jobs = new ArrayList<>();
    }
    this.jobs.add(jobsItem);
    return this;
  }

   /**
   * An array of simple [Job](https://developers.intellihr.io/docs/v1/) entries associated with this Person in reverse chronological order of start date.
   * @return jobs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of simple [Job](https://developers.intellihr.io/docs/v1/) entries associated with this Person in reverse chronological order of start date.")

  public List<DataPropertyInnerJobsInner> getJobs() {
    return jobs;
  }


  public void setJobs(List<DataPropertyInnerJobsInner> jobs) {
    
    
    
    this.jobs = jobs;
  }


  public DataPropertyInner workRights(DataPropertyInnerWorkRights workRights) {
    
    
    
    
    this.workRights = workRights;
    return this;
  }

   /**
   * Get workRights
   * @return workRights
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DataPropertyInnerWorkRights getWorkRights() {
    return workRights;
  }


  public void setWorkRights(DataPropertyInnerWorkRights workRights) {
    
    
    
    this.workRights = workRights;
  }


  public DataPropertyInner primaryEmailAddress(Object primaryEmailAddress) {
    
    
    
    
    this.primaryEmailAddress = primaryEmailAddress;
    return this;
  }

   /**
   * Get primaryEmailAddress
   * @return primaryEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrimaryEmailAddress() {
    return primaryEmailAddress;
  }


  public void setPrimaryEmailAddress(Object primaryEmailAddress) {
    
    
    
    this.primaryEmailAddress = primaryEmailAddress;
  }


  public DataPropertyInner primaryPhoneNumber(Object primaryPhoneNumber) {
    
    
    
    
    this.primaryPhoneNumber = primaryPhoneNumber;
    return this;
  }

   /**
   * Get primaryPhoneNumber
   * @return primaryPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPrimaryPhoneNumber() {
    return primaryPhoneNumber;
  }


  public void setPrimaryPhoneNumber(Object primaryPhoneNumber) {
    
    
    
    this.primaryPhoneNumber = primaryPhoneNumber;
  }


  public DataPropertyInner addresses(List<DataPropertyInnerAddressesInner> addresses) {
    
    
    
    
    this.addresses = addresses;
    return this;
  }

  public DataPropertyInner addAddressesItem(DataPropertyInnerAddressesInner addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * An array of addresses that belong to this Person.
   * @return addresses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of addresses that belong to this Person.")

  public List<DataPropertyInnerAddressesInner> getAddresses() {
    return addresses;
  }


  public void setAddresses(List<DataPropertyInnerAddressesInner> addresses) {
    
    
    
    this.addresses = addresses;
  }


  public DataPropertyInner phoneNumbers(List<DataPropertyInnerPhoneNumbersInner> phoneNumbers) {
    
    
    
    
    this.phoneNumbers = phoneNumbers;
    return this;
  }

  public DataPropertyInner addPhoneNumbersItem(DataPropertyInnerPhoneNumbersInner phoneNumbersItem) {
    if (this.phoneNumbers == null) {
      this.phoneNumbers = new ArrayList<>();
    }
    this.phoneNumbers.add(phoneNumbersItem);
    return this;
  }

   /**
   * An array of phone numbers that belong to this Person.
   * @return phoneNumbers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of phone numbers that belong to this Person.")

  public List<DataPropertyInnerPhoneNumbersInner> getPhoneNumbers() {
    return phoneNumbers;
  }


  public void setPhoneNumbers(List<DataPropertyInnerPhoneNumbersInner> phoneNumbers) {
    
    
    
    this.phoneNumbers = phoneNumbers;
  }


  public DataPropertyInner userAccount(Object userAccount) {
    
    
    
    
    this.userAccount = userAccount;
    return this;
  }

   /**
   * Get userAccount
   * @return userAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUserAccount() {
    return userAccount;
  }


  public void setUserAccount(Object userAccount) {
    
    
    
    this.userAccount = userAccount;
  }


  public DataPropertyInner customFields(CustomFieldsResponse customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

   /**
   * The custom field values for this [Person](https://developers.intellihr.io/docs/v1/)
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The custom field values for this [Person](https://developers.intellihr.io/docs/v1/)")

  public CustomFieldsResponse getCustomFields() {
    return customFields;
  }


  public void setCustomFields(CustomFieldsResponse customFields) {
    
    
    
    this.customFields = customFields;
  }


  public DataPropertyInner createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public DataPropertyInner updatedAt(String updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DataPropertyInner instance itself
   */
  public DataPropertyInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataPropertyInner dataPropertyInner = (DataPropertyInner) o;
    return Objects.equals(this.title, dataPropertyInner.title) &&
        Objects.equals(this.id, dataPropertyInner.id) &&
        Objects.equals(this.displayName, dataPropertyInner.displayName) &&
        Objects.equals(this.firstName, dataPropertyInner.firstName) &&
        Objects.equals(this.middleName, dataPropertyInner.middleName) &&
        Objects.equals(this.lastName, dataPropertyInner.lastName) &&
        Objects.equals(this.preferredName, dataPropertyInner.preferredName) &&
        Objects.equals(this.dateOfBirth, dataPropertyInner.dateOfBirth) &&
        Objects.equals(this.gender, dataPropertyInner.gender) &&
        Objects.equals(this.isSupervisor, dataPropertyInner.isSupervisor) &&
        Objects.equals(this.employeeNumber, dataPropertyInner.employeeNumber) &&
        Objects.equals(this.autoIncrementIntellihrId, dataPropertyInner.autoIncrementIntellihrId) &&
        Objects.equals(this.medicalConditions, dataPropertyInner.medicalConditions) &&
        Objects.equals(this.emailAddresses, dataPropertyInner.emailAddresses) &&
        Objects.equals(this.emergencyContact, dataPropertyInner.emergencyContact) &&
        Objects.equals(this.employmentStatus, dataPropertyInner.employmentStatus) &&
        Objects.equals(this.jobs, dataPropertyInner.jobs) &&
        Objects.equals(this.workRights, dataPropertyInner.workRights) &&
        Objects.equals(this.primaryEmailAddress, dataPropertyInner.primaryEmailAddress) &&
        Objects.equals(this.primaryPhoneNumber, dataPropertyInner.primaryPhoneNumber) &&
        Objects.equals(this.addresses, dataPropertyInner.addresses) &&
        Objects.equals(this.phoneNumbers, dataPropertyInner.phoneNumbers) &&
        Objects.equals(this.userAccount, dataPropertyInner.userAccount) &&
        Objects.equals(this.customFields, dataPropertyInner.customFields) &&
        Objects.equals(this.createdAt, dataPropertyInner.createdAt) &&
        Objects.equals(this.updatedAt, dataPropertyInner.updatedAt)&&
        Objects.equals(this.additionalProperties, dataPropertyInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, id, displayName, firstName, middleName, lastName, preferredName, dateOfBirth, gender, isSupervisor, employeeNumber, autoIncrementIntellihrId, medicalConditions, emailAddresses, emergencyContact, employmentStatus, jobs, workRights, primaryEmailAddress, primaryPhoneNumber, addresses, phoneNumbers, userAccount, customFields, createdAt, updatedAt, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataPropertyInner {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    isSupervisor: ").append(toIndentedString(isSupervisor)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    autoIncrementIntellihrId: ").append(toIndentedString(autoIncrementIntellihrId)).append("\n");
    sb.append("    medicalConditions: ").append(toIndentedString(medicalConditions)).append("\n");
    sb.append("    emailAddresses: ").append(toIndentedString(emailAddresses)).append("\n");
    sb.append("    emergencyContact: ").append(toIndentedString(emergencyContact)).append("\n");
    sb.append("    employmentStatus: ").append(toIndentedString(employmentStatus)).append("\n");
    sb.append("    jobs: ").append(toIndentedString(jobs)).append("\n");
    sb.append("    workRights: ").append(toIndentedString(workRights)).append("\n");
    sb.append("    primaryEmailAddress: ").append(toIndentedString(primaryEmailAddress)).append("\n");
    sb.append("    primaryPhoneNumber: ").append(toIndentedString(primaryPhoneNumber)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    phoneNumbers: ").append(toIndentedString(phoneNumbers)).append("\n");
    sb.append("    userAccount: ").append(toIndentedString(userAccount)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("id");
    openapiFields.add("displayName");
    openapiFields.add("firstName");
    openapiFields.add("middleName");
    openapiFields.add("lastName");
    openapiFields.add("preferredName");
    openapiFields.add("dateOfBirth");
    openapiFields.add("gender");
    openapiFields.add("isSupervisor");
    openapiFields.add("employeeNumber");
    openapiFields.add("autoIncrementIntellihrId");
    openapiFields.add("medicalConditions");
    openapiFields.add("emailAddresses");
    openapiFields.add("emergencyContact");
    openapiFields.add("employmentStatus");
    openapiFields.add("jobs");
    openapiFields.add("workRights");
    openapiFields.add("primaryEmailAddress");
    openapiFields.add("primaryPhoneNumber");
    openapiFields.add("addresses");
    openapiFields.add("phoneNumbers");
    openapiFields.add("userAccount");
    openapiFields.add("customFields");
    openapiFields.add("createdAt");
    openapiFields.add("updatedAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DataPropertyInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DataPropertyInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataPropertyInner is not found in the empty JSON string", DataPropertyInner.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if (jsonObj.get("medicalConditions") != null && !jsonObj.get("medicalConditions").isJsonNull()) {
        JsonArray jsonArraymedicalConditions = jsonObj.getAsJsonArray("medicalConditions");
        if (jsonArraymedicalConditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("medicalConditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `medicalConditions` to be an array in the JSON string but got `%s`", jsonObj.get("medicalConditions").toString()));
          }

          // validate the optional field `medicalConditions` (array)
          for (int i = 0; i < jsonArraymedicalConditions.size(); i++) {
            DataPropertyInnerMedicalConditionsInner.validateJsonObject(jsonArraymedicalConditions.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("emailAddresses") != null && !jsonObj.get("emailAddresses").isJsonNull()) {
        JsonArray jsonArrayemailAddresses = jsonObj.getAsJsonArray("emailAddresses");
        if (jsonArrayemailAddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("emailAddresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `emailAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("emailAddresses").toString()));
          }

          // validate the optional field `emailAddresses` (array)
          for (int i = 0; i < jsonArrayemailAddresses.size(); i++) {
            DataPropertyInnerEmailAddressesInner.validateJsonObject(jsonArrayemailAddresses.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `emergencyContact`
      if (jsonObj.get("emergencyContact") != null && !jsonObj.get("emergencyContact").isJsonNull()) {
        DataPropertyInnerEmergencyContact.validateJsonObject(jsonObj.getAsJsonObject("emergencyContact"));
      }
      if ((jsonObj.get("employmentStatus") != null && !jsonObj.get("employmentStatus").isJsonNull()) && !jsonObj.get("employmentStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employmentStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employmentStatus").toString()));
      }
      if (jsonObj.get("jobs") != null && !jsonObj.get("jobs").isJsonNull()) {
        JsonArray jsonArrayjobs = jsonObj.getAsJsonArray("jobs");
        if (jsonArrayjobs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("jobs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `jobs` to be an array in the JSON string but got `%s`", jsonObj.get("jobs").toString()));
          }

          // validate the optional field `jobs` (array)
          for (int i = 0; i < jsonArrayjobs.size(); i++) {
            DataPropertyInnerJobsInner.validateJsonObject(jsonArrayjobs.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `workRights`
      if (jsonObj.get("workRights") != null && !jsonObj.get("workRights").isJsonNull()) {
        DataPropertyInnerWorkRights.validateJsonObject(jsonObj.getAsJsonObject("workRights"));
      }
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            DataPropertyInnerAddressesInner.validateJsonObject(jsonArrayaddresses.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("phoneNumbers") != null && !jsonObj.get("phoneNumbers").isJsonNull()) {
        JsonArray jsonArrayphoneNumbers = jsonObj.getAsJsonArray("phoneNumbers");
        if (jsonArrayphoneNumbers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phoneNumbers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phoneNumbers` to be an array in the JSON string but got `%s`", jsonObj.get("phoneNumbers").toString()));
          }

          // validate the optional field `phoneNumbers` (array)
          for (int i = 0; i < jsonArrayphoneNumbers.size(); i++) {
            DataPropertyInnerPhoneNumbersInner.validateJsonObject(jsonArrayphoneNumbers.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
      if ((jsonObj.get("updatedAt") != null && !jsonObj.get("updatedAt").isJsonNull()) && !jsonObj.get("updatedAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedAt").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataPropertyInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataPropertyInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataPropertyInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataPropertyInner.class));

       return (TypeAdapter<T>) new TypeAdapter<DataPropertyInner>() {
           @Override
           public void write(JsonWriter out, DataPropertyInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DataPropertyInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DataPropertyInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DataPropertyInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DataPropertyInner
  * @throws IOException if the JSON string is invalid with respect to DataPropertyInner
  */
  public static DataPropertyInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataPropertyInner.class);
  }

 /**
  * Convert an instance of DataPropertyInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

