/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CustomFieldsResponse;
import com.konfigthis.client.model.JobProperty4BusinessEntity;
import com.konfigthis.client.model.JobProperty4BusinessUnit;
import com.konfigthis.client.model.JobProperty4CommentsInner;
import com.konfigthis.client.model.JobProperty4Establishment;
import com.konfigthis.client.model.JobProperty4Location;
import com.konfigthis.client.model.JobProperty4PayGrade;
import com.konfigthis.client.model.JobProperty4Person;
import com.konfigthis.client.model.JobProperty4PositionTitle;
import com.konfigthis.client.model.JobProperty4Recruitment;
import com.konfigthis.client.model.JobProperty4RemunerationSchedule;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * JobProperty4
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class JobProperty4 {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PERSON = "person";
  @SerializedName(SERIALIZED_NAME_PERSON)
  private JobProperty4Person person;

  public static final String SERIALIZED_NAME_RECRUITMENT = "recruitment";
  @SerializedName(SERIALIZED_NAME_RECRUITMENT)
  private JobProperty4Recruitment recruitment;

  public static final String SERIALIZED_NAME_EXTENDED_LEAVE = "extendedLeave";
  @SerializedName(SERIALIZED_NAME_EXTENDED_LEAVE)
  private Object extendedLeave = null;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private JobProperty4Location location;

  public static final String SERIALIZED_NAME_PAY_GRADE = "payGrade";
  @SerializedName(SERIALIZED_NAME_PAY_GRADE)
  private JobProperty4PayGrade payGrade;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private JobProperty4BusinessUnit businessUnit;

  public static final String SERIALIZED_NAME_BUSINESS_ENTITY = "businessEntity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ENTITY)
  private JobProperty4BusinessEntity businessEntity;

  public static final String SERIALIZED_NAME_ESTABLISHMENT = "establishment";
  @SerializedName(SERIALIZED_NAME_ESTABLISHMENT)
  private JobProperty4Establishment establishment;

  public static final String SERIALIZED_NAME_SUPERVISOR_JOB = "supervisorJob";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_JOB)
  private Object supervisorJob = null;

  public static final String SERIALIZED_NAME_SUPERVISOR_PERSON = "supervisorPerson";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_PERSON)
  private Object supervisorPerson = null;

  public static final String SERIALIZED_NAME_EMPLOYMENT_CONDITION = "employmentCondition";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_CONDITION)
  private Object employmentCondition = null;

  public static final String SERIALIZED_NAME_REMUNERATION_SCHEDULE = "remunerationSchedule";
  @SerializedName(SERIALIZED_NAME_REMUNERATION_SCHEDULE)
  private JobProperty4RemunerationSchedule remunerationSchedule;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POSITION_TITLE = "positionTitle";
  @SerializedName(SERIALIZED_NAME_POSITION_TITLE)
  private JobProperty4PositionTitle positionTitle;

  public static final String SERIALIZED_NAME_FTE = "fte";
  @SerializedName(SERIALIZED_NAME_FTE)
  private Object fte = null;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<JobProperty4CommentsInner> comments = null;

  public static final String SERIALIZED_NAME_LASTEST_JOB_CHANGE_COMMENT = "lastestJobChangeComment";
  @SerializedName(SERIALIZED_NAME_LASTEST_JOB_CHANGE_COMMENT)
  private Object lastestJobChangeComment = null;

  public static final String SERIALIZED_NAME_WORK_CLASS = "workClass";
  @SerializedName(SERIALIZED_NAME_WORK_CLASS)
  private String workClass;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private String workType;

  public static final String SERIALIZED_NAME_IS_PRIMARY_JOB = "isPrimaryJob";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY_JOB)
  private Boolean isPrimaryJob = false;

  public static final String SERIALIZED_NAME_JOB_STATUS = "jobStatus";
  @SerializedName(SERIALIZED_NAME_JOB_STATUS)
  private String jobStatus;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private Object createdBy = null;

  public static final String SERIALIZED_NAME_UPDATED_BY = "updatedBy";
  @SerializedName(SERIALIZED_NAME_UPDATED_BY)
  private Object updatedBy = null;

  public static final String SERIALIZED_NAME_POSITION_START_DATE = "positionStartDate";
  @SerializedName(SERIALIZED_NAME_POSITION_START_DATE)
  private String positionStartDate;

  public static final String SERIALIZED_NAME_COMPANY_START_DATE = "companyStartDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_START_DATE)
  private String companyStartDate;

  public static final String SERIALIZED_NAME_COMPANY_END_DATE = "companyEndDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_END_DATE)
  private Object companyEndDate = null;

  public static final String SERIALIZED_NAME_IS_END_DATE_CONFIRMED = "isEndDateConfirmed";
  @SerializedName(SERIALIZED_NAME_IS_END_DATE_CONFIRMED)
  private Boolean isEndDateConfirmed = false;

  public static final String SERIALIZED_NAME_TURNOVER_TYPE = "turnoverType";
  @SerializedName(SERIALIZED_NAME_TURNOVER_TYPE)
  private Object turnoverType = null;

  public static final String SERIALIZED_NAME_TURNOVER_REASON = "turnoverReason";
  @SerializedName(SERIALIZED_NAME_TURNOVER_REASON)
  private Object turnoverReason = null;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private CustomFieldsResponse customFields = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public JobProperty4() {
  }

  public JobProperty4 id(String id) {
    
    
    if (id != null && id.length() < 36) {
      throw new IllegalArgumentException("Invalid value for id. Length must be greater than or equal to 36.");
    }
    
    this.id = id;
    return this;
  }

   /**
   * The identifier string for the [Job](https://developers.intellihr.io/docs/v1/).
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9", value = "The identifier string for the [Job](https://developers.intellihr.io/docs/v1/).")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    if (id != null && id.length() < 36) {
      throw new IllegalArgumentException("Invalid value for id. Length must be greater than or equal to 36.");
    }
    this.id = id;
  }


  public JobProperty4 person(JobProperty4Person person) {
    
    
    
    
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4Person getPerson() {
    return person;
  }


  public void setPerson(JobProperty4Person person) {
    
    
    
    this.person = person;
  }


  public JobProperty4 recruitment(JobProperty4Recruitment recruitment) {
    
    
    
    
    this.recruitment = recruitment;
    return this;
  }

   /**
   * Get recruitment
   * @return recruitment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4Recruitment getRecruitment() {
    return recruitment;
  }


  public void setRecruitment(JobProperty4Recruitment recruitment) {
    
    
    
    this.recruitment = recruitment;
  }


  public JobProperty4 extendedLeave(Object extendedLeave) {
    
    
    
    
    this.extendedLeave = extendedLeave;
    return this;
  }

   /**
   * Get extendedLeave
   * @return extendedLeave
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getExtendedLeave() {
    return extendedLeave;
  }


  public void setExtendedLeave(Object extendedLeave) {
    
    
    
    this.extendedLeave = extendedLeave;
  }


  public JobProperty4 location(JobProperty4Location location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4Location getLocation() {
    return location;
  }


  public void setLocation(JobProperty4Location location) {
    
    
    
    this.location = location;
  }


  public JobProperty4 payGrade(JobProperty4PayGrade payGrade) {
    
    
    
    
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Get payGrade
   * @return payGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4PayGrade getPayGrade() {
    return payGrade;
  }


  public void setPayGrade(JobProperty4PayGrade payGrade) {
    
    
    
    this.payGrade = payGrade;
  }


  public JobProperty4 businessUnit(JobProperty4BusinessUnit businessUnit) {
    
    
    
    
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * Get businessUnit
   * @return businessUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4BusinessUnit getBusinessUnit() {
    return businessUnit;
  }


  public void setBusinessUnit(JobProperty4BusinessUnit businessUnit) {
    
    
    
    this.businessUnit = businessUnit;
  }


  public JobProperty4 businessEntity(JobProperty4BusinessEntity businessEntity) {
    
    
    
    
    this.businessEntity = businessEntity;
    return this;
  }

   /**
   * Get businessEntity
   * @return businessEntity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4BusinessEntity getBusinessEntity() {
    return businessEntity;
  }


  public void setBusinessEntity(JobProperty4BusinessEntity businessEntity) {
    
    
    
    this.businessEntity = businessEntity;
  }


  public JobProperty4 establishment(JobProperty4Establishment establishment) {
    
    
    
    
    this.establishment = establishment;
    return this;
  }

   /**
   * Get establishment
   * @return establishment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4Establishment getEstablishment() {
    return establishment;
  }


  public void setEstablishment(JobProperty4Establishment establishment) {
    
    
    
    this.establishment = establishment;
  }


  public JobProperty4 supervisorJob(Object supervisorJob) {
    
    
    
    
    this.supervisorJob = supervisorJob;
    return this;
  }

   /**
   * Get supervisorJob
   * @return supervisorJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSupervisorJob() {
    return supervisorJob;
  }


  public void setSupervisorJob(Object supervisorJob) {
    
    
    
    this.supervisorJob = supervisorJob;
  }


  public JobProperty4 supervisorPerson(Object supervisorPerson) {
    
    
    
    
    this.supervisorPerson = supervisorPerson;
    return this;
  }

   /**
   * Get supervisorPerson
   * @return supervisorPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getSupervisorPerson() {
    return supervisorPerson;
  }


  public void setSupervisorPerson(Object supervisorPerson) {
    
    
    
    this.supervisorPerson = supervisorPerson;
  }


  public JobProperty4 employmentCondition(Object employmentCondition) {
    
    
    
    
    this.employmentCondition = employmentCondition;
    return this;
  }

   /**
   * Get employmentCondition
   * @return employmentCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getEmploymentCondition() {
    return employmentCondition;
  }


  public void setEmploymentCondition(Object employmentCondition) {
    
    
    
    this.employmentCondition = employmentCondition;
  }


  public JobProperty4 remunerationSchedule(JobProperty4RemunerationSchedule remunerationSchedule) {
    
    
    
    
    this.remunerationSchedule = remunerationSchedule;
    return this;
  }

   /**
   * Get remunerationSchedule
   * @return remunerationSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4RemunerationSchedule getRemunerationSchedule() {
    return remunerationSchedule;
  }


  public void setRemunerationSchedule(JobProperty4RemunerationSchedule remunerationSchedule) {
    
    
    
    this.remunerationSchedule = remunerationSchedule;
  }


  public JobProperty4 name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The name of this [Job](https://developers.intellihr.io/docs/v1/).
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Janitor", value = "The name of this [Job](https://developers.intellihr.io/docs/v1/).")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public JobProperty4 positionTitle(JobProperty4PositionTitle positionTitle) {
    
    
    
    
    this.positionTitle = positionTitle;
    return this;
  }

   /**
   * Get positionTitle
   * @return positionTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobProperty4PositionTitle getPositionTitle() {
    return positionTitle;
  }


  public void setPositionTitle(JobProperty4PositionTitle positionTitle) {
    
    
    
    this.positionTitle = positionTitle;
  }


  public JobProperty4 fte(Object fte) {
    
    
    
    
    this.fte = fte;
    return this;
  }

   /**
   * Get fte
   * @return fte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getFte() {
    return fte;
  }


  public void setFte(Object fte) {
    
    
    
    this.fte = fte;
  }


  public JobProperty4 comments(List<JobProperty4CommentsInner> comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

  public JobProperty4 addCommentsItem(JobProperty4CommentsInner commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

   /**
   * An array of comment objects that annotate the reason for [Job](https://developers.intellihr.io/docs/v1/) changes. Will be an empty array when there has been no updates to the Job.
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of comment objects that annotate the reason for [Job](https://developers.intellihr.io/docs/v1/) changes. Will be an empty array when there has been no updates to the Job.")

  public List<JobProperty4CommentsInner> getComments() {
    return comments;
  }


  public void setComments(List<JobProperty4CommentsInner> comments) {
    
    
    
    this.comments = comments;
  }


  public JobProperty4 lastestJobChangeComment(Object lastestJobChangeComment) {
    
    
    
    
    this.lastestJobChangeComment = lastestJobChangeComment;
    return this;
  }

   /**
   * Get lastestJobChangeComment
   * @return lastestJobChangeComment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getLastestJobChangeComment() {
    return lastestJobChangeComment;
  }


  public void setLastestJobChangeComment(Object lastestJobChangeComment) {
    
    
    
    this.lastestJobChangeComment = lastestJobChangeComment;
  }


  public JobProperty4 workClass(String workClass) {
    
    
    
    
    this.workClass = workClass;
    return this;
  }

   /**
   * The [Work Class](https://developers.intellihr.io/docs/v1/) of this [Job](https://developers.intellihr.io/docs/v1/). This is extra details about the [Work Type](https://developers.intellihr.io/docs/v1/).
   * @return workClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Full-Time", value = "The [Work Class](https://developers.intellihr.io/docs/v1/) of this [Job](https://developers.intellihr.io/docs/v1/). This is extra details about the [Work Type](https://developers.intellihr.io/docs/v1/).")

  public String getWorkClass() {
    return workClass;
  }


  public void setWorkClass(String workClass) {
    
    
    
    this.workClass = workClass;
  }


  public JobProperty4 workType(String workType) {
    
    
    
    
    this.workType = workType;
    return this;
  }

   /**
   * This is the [Work Classification](https://developers.intellihr.io/docs/v1/) for this [Job](https://developers.intellihr.io/docs/v1/), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: &#x60;Permanent&#x60;, &#x60;Fixed Contract&#x60;, &#x60;Unpaid&#x60;, &#x60;Temporary/Casual&#x60;, &#x60;Independent Contract&#x60;.
   * @return workType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Permanent", value = "This is the [Work Classification](https://developers.intellihr.io/docs/v1/) for this [Job](https://developers.intellihr.io/docs/v1/), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.")

  public String getWorkType() {
    return workType;
  }


  public void setWorkType(String workType) {
    
    
    
    this.workType = workType;
  }


  public JobProperty4 isPrimaryJob(Boolean isPrimaryJob) {
    
    
    
    
    this.isPrimaryJob = isPrimaryJob;
    return this;
  }

   /**
   * Whether this job is the primary job on the [Person](https://developers.intellihr.io/docs/v1/). Only one job on a [Person](https://developers.intellihr.io/docs/v1/) can be primary at a time.
   * @return isPrimaryJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether this job is the primary job on the [Person](https://developers.intellihr.io/docs/v1/). Only one job on a [Person](https://developers.intellihr.io/docs/v1/) can be primary at a time.")

  public Boolean getIsPrimaryJob() {
    return isPrimaryJob;
  }


  public void setIsPrimaryJob(Boolean isPrimaryJob) {
    
    
    
    this.isPrimaryJob = isPrimaryJob;
  }


  public JobProperty4 jobStatus(String jobStatus) {
    
    
    
    
    this.jobStatus = jobStatus;
    return this;
  }

   /**
   * The current status of this job within this organisation. Enum: &#x60;Past Job&#x60;, &#x60;Future Job&#x60;, &#x60;Ending Job&#x60;, &#x60;Current Job&#x60;.
   * @return jobStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Current Job", value = "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.")

  public String getJobStatus() {
    return jobStatus;
  }


  public void setJobStatus(String jobStatus) {
    
    
    
    this.jobStatus = jobStatus;
  }


  public JobProperty4 createdBy(Object createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(Object createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public JobProperty4 updatedBy(Object updatedBy) {
    
    
    
    
    this.updatedBy = updatedBy;
    return this;
  }

   /**
   * Get updatedBy
   * @return updatedBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUpdatedBy() {
    return updatedBy;
  }


  public void setUpdatedBy(Object updatedBy) {
    
    
    
    this.updatedBy = updatedBy;
  }


  public JobProperty4 positionStartDate(String positionStartDate) {
    
    
    
    
    this.positionStartDate = positionStartDate;
    return this;
  }

   /**
   * The start date of the current position the person is in. The gap between the &#x60;companyStartDate&#x60; and &#x60;positionStartDate&#x60; will be filled with \&quot;Previous position title\&quot; historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return positionStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getPositionStartDate() {
    return positionStartDate;
  }


  public void setPositionStartDate(String positionStartDate) {
    
    
    
    this.positionStartDate = positionStartDate;
  }


  public JobProperty4 companyStartDate(String companyStartDate) {
    
    
    
    
    this.companyStartDate = companyStartDate;
    return this;
  }

   /**
   * The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
   * @return companyStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).")

  public String getCompanyStartDate() {
    return companyStartDate;
  }


  public void setCompanyStartDate(String companyStartDate) {
    
    
    
    this.companyStartDate = companyStartDate;
  }


  public JobProperty4 companyEndDate(Object companyEndDate) {
    
    
    
    
    this.companyEndDate = companyEndDate;
    return this;
  }

   /**
   * Get companyEndDate
   * @return companyEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCompanyEndDate() {
    return companyEndDate;
  }


  public void setCompanyEndDate(Object companyEndDate) {
    
    
    
    this.companyEndDate = companyEndDate;
  }


  public JobProperty4 isEndDateConfirmed(Boolean isEndDateConfirmed) {
    
    
    
    
    this.isEndDateConfirmed = isEndDateConfirmed;
    return this;
  }

   /**
   * Whether the end date has been finalised within the intelliHR application.
   * @return isEndDateConfirmed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether the end date has been finalised within the intelliHR application.")

  public Boolean getIsEndDateConfirmed() {
    return isEndDateConfirmed;
  }


  public void setIsEndDateConfirmed(Boolean isEndDateConfirmed) {
    
    
    
    this.isEndDateConfirmed = isEndDateConfirmed;
  }


  public JobProperty4 turnoverType(Object turnoverType) {
    
    
    
    
    this.turnoverType = turnoverType;
    return this;
  }

   /**
   * Get turnoverType
   * @return turnoverType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTurnoverType() {
    return turnoverType;
  }


  public void setTurnoverType(Object turnoverType) {
    
    
    
    this.turnoverType = turnoverType;
  }


  public JobProperty4 turnoverReason(Object turnoverReason) {
    
    
    
    
    this.turnoverReason = turnoverReason;
    return this;
  }

   /**
   * Get turnoverReason
   * @return turnoverReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTurnoverReason() {
    return turnoverReason;
  }


  public void setTurnoverReason(Object turnoverReason) {
    
    
    
    this.turnoverReason = turnoverReason;
  }


  public JobProperty4 customFields(CustomFieldsResponse customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

   /**
   * The custom field values for this Job
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The custom field values for this Job")

  public CustomFieldsResponse getCustomFields() {
    return customFields;
  }


  public void setCustomFields(CustomFieldsResponse customFields) {
    
    
    
    this.customFields = customFields;
  }


  public JobProperty4 createdAt(String createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    
    
    
    this.createdAt = createdAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the JobProperty4 instance itself
   */
  public JobProperty4 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobProperty4 jobProperty4 = (JobProperty4) o;
    return Objects.equals(this.id, jobProperty4.id) &&
        Objects.equals(this.person, jobProperty4.person) &&
        Objects.equals(this.recruitment, jobProperty4.recruitment) &&
        Objects.equals(this.extendedLeave, jobProperty4.extendedLeave) &&
        Objects.equals(this.location, jobProperty4.location) &&
        Objects.equals(this.payGrade, jobProperty4.payGrade) &&
        Objects.equals(this.businessUnit, jobProperty4.businessUnit) &&
        Objects.equals(this.businessEntity, jobProperty4.businessEntity) &&
        Objects.equals(this.establishment, jobProperty4.establishment) &&
        Objects.equals(this.supervisorJob, jobProperty4.supervisorJob) &&
        Objects.equals(this.supervisorPerson, jobProperty4.supervisorPerson) &&
        Objects.equals(this.employmentCondition, jobProperty4.employmentCondition) &&
        Objects.equals(this.remunerationSchedule, jobProperty4.remunerationSchedule) &&
        Objects.equals(this.name, jobProperty4.name) &&
        Objects.equals(this.positionTitle, jobProperty4.positionTitle) &&
        Objects.equals(this.fte, jobProperty4.fte) &&
        Objects.equals(this.comments, jobProperty4.comments) &&
        Objects.equals(this.lastestJobChangeComment, jobProperty4.lastestJobChangeComment) &&
        Objects.equals(this.workClass, jobProperty4.workClass) &&
        Objects.equals(this.workType, jobProperty4.workType) &&
        Objects.equals(this.isPrimaryJob, jobProperty4.isPrimaryJob) &&
        Objects.equals(this.jobStatus, jobProperty4.jobStatus) &&
        Objects.equals(this.createdBy, jobProperty4.createdBy) &&
        Objects.equals(this.updatedBy, jobProperty4.updatedBy) &&
        Objects.equals(this.positionStartDate, jobProperty4.positionStartDate) &&
        Objects.equals(this.companyStartDate, jobProperty4.companyStartDate) &&
        Objects.equals(this.companyEndDate, jobProperty4.companyEndDate) &&
        Objects.equals(this.isEndDateConfirmed, jobProperty4.isEndDateConfirmed) &&
        Objects.equals(this.turnoverType, jobProperty4.turnoverType) &&
        Objects.equals(this.turnoverReason, jobProperty4.turnoverReason) &&
        Objects.equals(this.customFields, jobProperty4.customFields) &&
        Objects.equals(this.createdAt, jobProperty4.createdAt)&&
        Objects.equals(this.additionalProperties, jobProperty4.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, person, recruitment, extendedLeave, location, payGrade, businessUnit, businessEntity, establishment, supervisorJob, supervisorPerson, employmentCondition, remunerationSchedule, name, positionTitle, fte, comments, lastestJobChangeComment, workClass, workType, isPrimaryJob, jobStatus, createdBy, updatedBy, positionStartDate, companyStartDate, companyEndDate, isEndDateConfirmed, turnoverType, turnoverReason, customFields, createdAt, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobProperty4 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    recruitment: ").append(toIndentedString(recruitment)).append("\n");
    sb.append("    extendedLeave: ").append(toIndentedString(extendedLeave)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    businessEntity: ").append(toIndentedString(businessEntity)).append("\n");
    sb.append("    establishment: ").append(toIndentedString(establishment)).append("\n");
    sb.append("    supervisorJob: ").append(toIndentedString(supervisorJob)).append("\n");
    sb.append("    supervisorPerson: ").append(toIndentedString(supervisorPerson)).append("\n");
    sb.append("    employmentCondition: ").append(toIndentedString(employmentCondition)).append("\n");
    sb.append("    remunerationSchedule: ").append(toIndentedString(remunerationSchedule)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    positionTitle: ").append(toIndentedString(positionTitle)).append("\n");
    sb.append("    fte: ").append(toIndentedString(fte)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    lastestJobChangeComment: ").append(toIndentedString(lastestJobChangeComment)).append("\n");
    sb.append("    workClass: ").append(toIndentedString(workClass)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    isPrimaryJob: ").append(toIndentedString(isPrimaryJob)).append("\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    positionStartDate: ").append(toIndentedString(positionStartDate)).append("\n");
    sb.append("    companyStartDate: ").append(toIndentedString(companyStartDate)).append("\n");
    sb.append("    companyEndDate: ").append(toIndentedString(companyEndDate)).append("\n");
    sb.append("    isEndDateConfirmed: ").append(toIndentedString(isEndDateConfirmed)).append("\n");
    sb.append("    turnoverType: ").append(toIndentedString(turnoverType)).append("\n");
    sb.append("    turnoverReason: ").append(toIndentedString(turnoverReason)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("person");
    openapiFields.add("recruitment");
    openapiFields.add("extendedLeave");
    openapiFields.add("location");
    openapiFields.add("payGrade");
    openapiFields.add("businessUnit");
    openapiFields.add("businessEntity");
    openapiFields.add("establishment");
    openapiFields.add("supervisorJob");
    openapiFields.add("supervisorPerson");
    openapiFields.add("employmentCondition");
    openapiFields.add("remunerationSchedule");
    openapiFields.add("name");
    openapiFields.add("positionTitle");
    openapiFields.add("fte");
    openapiFields.add("comments");
    openapiFields.add("lastestJobChangeComment");
    openapiFields.add("workClass");
    openapiFields.add("workType");
    openapiFields.add("isPrimaryJob");
    openapiFields.add("jobStatus");
    openapiFields.add("createdBy");
    openapiFields.add("updatedBy");
    openapiFields.add("positionStartDate");
    openapiFields.add("companyStartDate");
    openapiFields.add("companyEndDate");
    openapiFields.add("isEndDateConfirmed");
    openapiFields.add("turnoverType");
    openapiFields.add("turnoverReason");
    openapiFields.add("customFields");
    openapiFields.add("createdAt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobProperty4
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobProperty4.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobProperty4 is not found in the empty JSON string", JobProperty4.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `person`
      if (jsonObj.get("person") != null && !jsonObj.get("person").isJsonNull()) {
        JobProperty4Person.validateJsonObject(jsonObj.getAsJsonObject("person"));
      }
      // validate the optional field `recruitment`
      if (jsonObj.get("recruitment") != null && !jsonObj.get("recruitment").isJsonNull()) {
        JobProperty4Recruitment.validateJsonObject(jsonObj.getAsJsonObject("recruitment"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        JobProperty4Location.validateJsonObject(jsonObj.getAsJsonObject("location"));
      }
      // validate the optional field `payGrade`
      if (jsonObj.get("payGrade") != null && !jsonObj.get("payGrade").isJsonNull()) {
        JobProperty4PayGrade.validateJsonObject(jsonObj.getAsJsonObject("payGrade"));
      }
      // validate the optional field `businessUnit`
      if (jsonObj.get("businessUnit") != null && !jsonObj.get("businessUnit").isJsonNull()) {
        JobProperty4BusinessUnit.validateJsonObject(jsonObj.getAsJsonObject("businessUnit"));
      }
      // validate the optional field `businessEntity`
      if (jsonObj.get("businessEntity") != null && !jsonObj.get("businessEntity").isJsonNull()) {
        JobProperty4BusinessEntity.validateJsonObject(jsonObj.getAsJsonObject("businessEntity"));
      }
      // validate the optional field `establishment`
      if (jsonObj.get("establishment") != null && !jsonObj.get("establishment").isJsonNull()) {
        JobProperty4Establishment.validateJsonObject(jsonObj.getAsJsonObject("establishment"));
      }
      // validate the optional field `remunerationSchedule`
      if (jsonObj.get("remunerationSchedule") != null && !jsonObj.get("remunerationSchedule").isJsonNull()) {
        JobProperty4RemunerationSchedule.validateJsonObject(jsonObj.getAsJsonObject("remunerationSchedule"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `positionTitle`
      if (jsonObj.get("positionTitle") != null && !jsonObj.get("positionTitle").isJsonNull()) {
        JobProperty4PositionTitle.validateJsonObject(jsonObj.getAsJsonObject("positionTitle"));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) {
        JsonArray jsonArraycomments = jsonObj.getAsJsonArray("comments");
        if (jsonArraycomments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("comments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
          }

          // validate the optional field `comments` (array)
          for (int i = 0; i < jsonArraycomments.size(); i++) {
            JobProperty4CommentsInner.validateJsonObject(jsonArraycomments.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("workClass") != null && !jsonObj.get("workClass").isJsonNull()) && !jsonObj.get("workClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workClass").toString()));
      }
      if ((jsonObj.get("workType") != null && !jsonObj.get("workType").isJsonNull()) && !jsonObj.get("workType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workType").toString()));
      }
      if ((jsonObj.get("jobStatus") != null && !jsonObj.get("jobStatus").isJsonNull()) && !jsonObj.get("jobStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobStatus").toString()));
      }
      if ((jsonObj.get("positionStartDate") != null && !jsonObj.get("positionStartDate").isJsonNull()) && !jsonObj.get("positionStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionStartDate").toString()));
      }
      if ((jsonObj.get("companyStartDate") != null && !jsonObj.get("companyStartDate").isJsonNull()) && !jsonObj.get("companyStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyStartDate").toString()));
      }
      if ((jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) && !jsonObj.get("createdAt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdAt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdAt").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobProperty4.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobProperty4' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobProperty4> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobProperty4.class));

       return (TypeAdapter<T>) new TypeAdapter<JobProperty4>() {
           @Override
           public void write(JsonWriter out, JobProperty4 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public JobProperty4 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             JobProperty4 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobProperty4 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobProperty4
  * @throws IOException if the JSON string is invalid with respect to JobProperty4
  */
  public static JobProperty4 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobProperty4.class);
  }

 /**
  * Convert an instance of JobProperty4 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

