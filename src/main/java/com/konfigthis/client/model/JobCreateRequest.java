/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.BusinessEntitiesCreateRequestCustomFieldsValue;
import com.konfigthis.client.model.JobCreateRequestBusinessEntity;
import com.konfigthis.client.model.JobCreateRequestBusinessUnit;
import com.konfigthis.client.model.JobCreateRequestEmploymentCondition;
import com.konfigthis.client.model.JobCreateRequestEstablishment;
import com.konfigthis.client.model.JobCreateRequestLocation;
import com.konfigthis.client.model.JobCreateRequestPayGrade;
import com.konfigthis.client.model.JobCreateRequestPerson;
import com.konfigthis.client.model.JobCreateRequestRecruitment;
import com.konfigthis.client.model.JobCreateRequestRemunerationSchedule;
import com.konfigthis.client.model.JobCreateRequestSupervisorJob;
import com.konfigthis.client.model.JobCreateRequestSupervisorPerson;
import com.konfigthis.client.model.JobCreateRequestWorkClass;
import com.konfigthis.client.model.JobCreateRequestWorkType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * JobCreateRequest
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class JobCreateRequest {
  public static final String SERIALIZED_NAME_PERSON = "person";
  @SerializedName(SERIALIZED_NAME_PERSON)
  private JobCreateRequestPerson person;

  public static final String SERIALIZED_NAME_COMPANY_START_DATE = "companyStartDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_START_DATE)
  private String companyStartDate;

  public static final String SERIALIZED_NAME_COMPANY_END_DATE = "companyEndDate";
  @SerializedName(SERIALIZED_NAME_COMPANY_END_DATE)
  private String companyEndDate;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private String startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private String endDate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BUSINESS_ENTITY = "businessEntity";
  @SerializedName(SERIALIZED_NAME_BUSINESS_ENTITY)
  private JobCreateRequestBusinessEntity businessEntity;

  public static final String SERIALIZED_NAME_BUSINESS_UNIT = "businessUnit";
  @SerializedName(SERIALIZED_NAME_BUSINESS_UNIT)
  private JobCreateRequestBusinessUnit businessUnit;

  public static final String SERIALIZED_NAME_ESTABLISHMENT = "establishment";
  @SerializedName(SERIALIZED_NAME_ESTABLISHMENT)
  private JobCreateRequestEstablishment establishment;

  public static final String SERIALIZED_NAME_SUPERVISOR_PERSON = "supervisorPerson";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_PERSON)
  private JobCreateRequestSupervisorPerson supervisorPerson;

  public static final String SERIALIZED_NAME_SUPERVISOR_JOB = "supervisorJob";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_JOB)
  private JobCreateRequestSupervisorJob supervisorJob;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private JobCreateRequestLocation location;

  public static final String SERIALIZED_NAME_WORK_CLASS = "workClass";
  @SerializedName(SERIALIZED_NAME_WORK_CLASS)
  private JobCreateRequestWorkClass workClass;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private JobCreateRequestWorkType workType;

  public static final String SERIALIZED_NAME_FTE = "fte";
  @SerializedName(SERIALIZED_NAME_FTE)
  private String fte;

  public static final String SERIALIZED_NAME_PAY_GRADE = "payGrade";
  @SerializedName(SERIALIZED_NAME_PAY_GRADE)
  private JobCreateRequestPayGrade payGrade;

  public static final String SERIALIZED_NAME_EMPLOYMENT_CONDITION = "employmentCondition";
  @SerializedName(SERIALIZED_NAME_EMPLOYMENT_CONDITION)
  private JobCreateRequestEmploymentCondition employmentCondition;

  public static final String SERIALIZED_NAME_REMUNERATION_SCHEDULE = "remunerationSchedule";
  @SerializedName(SERIALIZED_NAME_REMUNERATION_SCHEDULE)
  private JobCreateRequestRemunerationSchedule remunerationSchedule;

  public static final String SERIALIZED_NAME_RECRUITMENT = "recruitment";
  @SerializedName(SERIALIZED_NAME_RECRUITMENT)
  private JobCreateRequestRecruitment recruitment;

  public static final String SERIALIZED_NAME_CUSTOM_FIELDS = "customFields";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FIELDS)
  private Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> customFields = null;

  public JobCreateRequest() {
  }

  public JobCreateRequest person(JobCreateRequestPerson person) {
    
    
    
    
    this.person = person;
    return this;
  }

   /**
   * Get person
   * @return person
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public JobCreateRequestPerson getPerson() {
    return person;
  }


  public void setPerson(JobCreateRequestPerson person) {
    
    
    
    this.person = person;
  }


  public JobCreateRequest companyStartDate(String companyStartDate) {
    
    
    
    
    this.companyStartDate = companyStartDate;
    return this;
  }

   /**
   * The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return companyStartDate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", required = true, value = "The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getCompanyStartDate() {
    return companyStartDate;
  }


  public void setCompanyStartDate(String companyStartDate) {
    
    
    
    this.companyStartDate = companyStartDate;
  }


  public JobCreateRequest companyEndDate(String companyEndDate) {
    
    
    
    
    this.companyEndDate = companyEndDate;
    return this;
  }

   /**
   * The &lt;b&gt;exclusive&lt;/b&gt; date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person&#39;s last working date is on 2025-04-23, the &#x60;companyEndDate&#x60; should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return companyEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The <b>exclusive</b> date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getCompanyEndDate() {
    return companyEndDate;
  }


  public void setCompanyEndDate(String companyEndDate) {
    
    
    
    this.companyEndDate = companyEndDate;
  }


  public JobCreateRequest startDate(String startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return startDate
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The date this [Job](https://developers.intellihr.io/docs/v1/) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getStartDate() {
    return startDate;
  }


  public void setStartDate(String startDate) {
    
    
    
    this.startDate = startDate;
  }


  public JobCreateRequest endDate(String endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * The &lt;b&gt;exclusive&lt;/b&gt; date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person&#39;s last working date is on 2025-04-23, the &#x60;endDate&#x60; should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.
   * @return endDate
   * @deprecated
  **/
  @Deprecated
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2015-03-01T22:30:00+00:00", value = "The <b>exclusive</b> date this [Job](https://developers.intellihr.io/docs/v1/) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `endDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).   YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.")

  public String getEndDate() {
    return endDate;
  }


  public void setEndDate(String endDate) {
    
    
    
    this.endDate = endDate;
  }


  public JobCreateRequest name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * The job name assigned to this [Job](https://developers.intellihr.io/docs/v1/). Will attempt to match to an existing [Position Title](https://developers.intellihr.io/docs/v1/), otherwise creates a new [Position Title](https://developers.intellihr.io/docs/v1/).
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Food Scientist", required = true, value = "The job name assigned to this [Job](https://developers.intellihr.io/docs/v1/). Will attempt to match to an existing [Position Title](https://developers.intellihr.io/docs/v1/), otherwise creates a new [Position Title](https://developers.intellihr.io/docs/v1/).")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public JobCreateRequest businessEntity(JobCreateRequestBusinessEntity businessEntity) {
    
    
    
    
    this.businessEntity = businessEntity;
    return this;
  }

   /**
   * Get businessEntity
   * @return businessEntity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public JobCreateRequestBusinessEntity getBusinessEntity() {
    return businessEntity;
  }


  public void setBusinessEntity(JobCreateRequestBusinessEntity businessEntity) {
    
    
    
    this.businessEntity = businessEntity;
  }


  public JobCreateRequest businessUnit(JobCreateRequestBusinessUnit businessUnit) {
    
    
    
    
    this.businessUnit = businessUnit;
    return this;
  }

   /**
   * Get businessUnit
   * @return businessUnit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public JobCreateRequestBusinessUnit getBusinessUnit() {
    return businessUnit;
  }


  public void setBusinessUnit(JobCreateRequestBusinessUnit businessUnit) {
    
    
    
    this.businessUnit = businessUnit;
  }


  public JobCreateRequest establishment(JobCreateRequestEstablishment establishment) {
    
    
    
    
    this.establishment = establishment;
    return this;
  }

   /**
   * Get establishment
   * @return establishment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestEstablishment getEstablishment() {
    return establishment;
  }


  public void setEstablishment(JobCreateRequestEstablishment establishment) {
    
    
    
    this.establishment = establishment;
  }


  public JobCreateRequest supervisorPerson(JobCreateRequestSupervisorPerson supervisorPerson) {
    
    
    
    
    this.supervisorPerson = supervisorPerson;
    return this;
  }

   /**
   * Get supervisorPerson
   * @return supervisorPerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestSupervisorPerson getSupervisorPerson() {
    return supervisorPerson;
  }


  public void setSupervisorPerson(JobCreateRequestSupervisorPerson supervisorPerson) {
    
    
    
    this.supervisorPerson = supervisorPerson;
  }


  public JobCreateRequest supervisorJob(JobCreateRequestSupervisorJob supervisorJob) {
    
    
    
    
    this.supervisorJob = supervisorJob;
    return this;
  }

   /**
   * Get supervisorJob
   * @return supervisorJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestSupervisorJob getSupervisorJob() {
    return supervisorJob;
  }


  public void setSupervisorJob(JobCreateRequestSupervisorJob supervisorJob) {
    
    
    
    this.supervisorJob = supervisorJob;
  }


  public JobCreateRequest location(JobCreateRequestLocation location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestLocation getLocation() {
    return location;
  }


  public void setLocation(JobCreateRequestLocation location) {
    
    
    
    this.location = location;
  }


  public JobCreateRequest workClass(JobCreateRequestWorkClass workClass) {
    
    
    
    
    this.workClass = workClass;
    return this;
  }

   /**
   * Get workClass
   * @return workClass
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public JobCreateRequestWorkClass getWorkClass() {
    return workClass;
  }


  public void setWorkClass(JobCreateRequestWorkClass workClass) {
    
    
    
    this.workClass = workClass;
  }


  public JobCreateRequest workType(JobCreateRequestWorkType workType) {
    
    
    
    
    this.workType = workType;
    return this;
  }

   /**
   * Get workType
   * @return workType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestWorkType getWorkType() {
    return workType;
  }


  public void setWorkType(JobCreateRequestWorkType workType) {
    
    
    
    this.workType = workType;
  }


  public JobCreateRequest fte(String fte) {
    
    
    
    
    this.fte = fte;
    return this;
  }

   /**
   * The full time equivalent of this [Job](https://developers.intellihr.io/docs/v1/). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.
   * @return fte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "The full time equivalent of this [Job](https://developers.intellihr.io/docs/v1/). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.")

  public String getFte() {
    return fte;
  }


  public void setFte(String fte) {
    
    
    
    this.fte = fte;
  }


  public JobCreateRequest payGrade(JobCreateRequestPayGrade payGrade) {
    
    
    
    
    this.payGrade = payGrade;
    return this;
  }

   /**
   * Get payGrade
   * @return payGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestPayGrade getPayGrade() {
    return payGrade;
  }


  public void setPayGrade(JobCreateRequestPayGrade payGrade) {
    
    
    
    this.payGrade = payGrade;
  }


  public JobCreateRequest employmentCondition(JobCreateRequestEmploymentCondition employmentCondition) {
    
    
    
    
    this.employmentCondition = employmentCondition;
    return this;
  }

   /**
   * Get employmentCondition
   * @return employmentCondition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestEmploymentCondition getEmploymentCondition() {
    return employmentCondition;
  }


  public void setEmploymentCondition(JobCreateRequestEmploymentCondition employmentCondition) {
    
    
    
    this.employmentCondition = employmentCondition;
  }


  public JobCreateRequest remunerationSchedule(JobCreateRequestRemunerationSchedule remunerationSchedule) {
    
    
    
    
    this.remunerationSchedule = remunerationSchedule;
    return this;
  }

   /**
   * Get remunerationSchedule
   * @return remunerationSchedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestRemunerationSchedule getRemunerationSchedule() {
    return remunerationSchedule;
  }


  public void setRemunerationSchedule(JobCreateRequestRemunerationSchedule remunerationSchedule) {
    
    
    
    this.remunerationSchedule = remunerationSchedule;
  }


  public JobCreateRequest recruitment(JobCreateRequestRecruitment recruitment) {
    
    
    
    
    this.recruitment = recruitment;
    return this;
  }

   /**
   * Get recruitment
   * @return recruitment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobCreateRequestRecruitment getRecruitment() {
    return recruitment;
  }


  public void setRecruitment(JobCreateRequestRecruitment recruitment) {
    
    
    
    this.recruitment = recruitment;
  }


  public JobCreateRequest customFields(Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> customFields) {
    
    
    
    
    this.customFields = customFields;
    return this;
  }

  public JobCreateRequest putCustomFieldsItem(String key, BusinessEntitiesCreateRequestCustomFieldsValue customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

   /**
   * The custom field values for this Job
   * @return customFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"text_field_api_name\":{\"value\":\"Some text value\"},\"numeric_field_api_name\":{\"value\":\"50\"},\"single_select_api_name\":{\"value\":{\"label\":\"Drama\"}},\"multi_select_api_name\":{\"value\":{\"labels\":[\"Bananas\",\"Apples\"]}},\"people_dropdown_api_name\":{\"value\":[{\"person\":{\"id\":\"8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9X\",\"name\":\"Bruce Wayne\",\"primaryEmailAddress\":\"bruce.wayne@example.com\",\"employeeNumber\":\"00001\",\"autoIncrementIntellihrId\":\"1000\"},\"job\":{\"id\":\"569904c8-5d36-4c2f-afb0-525eeb8da32dX\",\"name\":\"Maintenance worker\"}},{\"person\":{\"id\":\"313fde44-f24e-4ec9-9473-0d0f3527222dX\",\"name\":\"Batman\",\"primaryEmailAddress\":\"batman@example.com\",\"employeeNumber\":\"00002\",\"autoIncrementIntellihrId\":\"1001\"},\"job\":{\"id\":\"653304c8-5d36-4c2f-afb0-525eeb8da32dX\",\"name\":\"Janitor\"}}]}}", value = "The custom field values for this Job")

  public Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> getCustomFields() {
    return customFields;
  }


  public void setCustomFields(Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> customFields) {
    
    
    
    this.customFields = customFields;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the JobCreateRequest instance itself
   */
  public JobCreateRequest putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobCreateRequest jobCreateRequest = (JobCreateRequest) o;
    return Objects.equals(this.person, jobCreateRequest.person) &&
        Objects.equals(this.companyStartDate, jobCreateRequest.companyStartDate) &&
        Objects.equals(this.companyEndDate, jobCreateRequest.companyEndDate) &&
        Objects.equals(this.startDate, jobCreateRequest.startDate) &&
        Objects.equals(this.endDate, jobCreateRequest.endDate) &&
        Objects.equals(this.name, jobCreateRequest.name) &&
        Objects.equals(this.businessEntity, jobCreateRequest.businessEntity) &&
        Objects.equals(this.businessUnit, jobCreateRequest.businessUnit) &&
        Objects.equals(this.establishment, jobCreateRequest.establishment) &&
        Objects.equals(this.supervisorPerson, jobCreateRequest.supervisorPerson) &&
        Objects.equals(this.supervisorJob, jobCreateRequest.supervisorJob) &&
        Objects.equals(this.location, jobCreateRequest.location) &&
        Objects.equals(this.workClass, jobCreateRequest.workClass) &&
        Objects.equals(this.workType, jobCreateRequest.workType) &&
        Objects.equals(this.fte, jobCreateRequest.fte) &&
        Objects.equals(this.payGrade, jobCreateRequest.payGrade) &&
        Objects.equals(this.employmentCondition, jobCreateRequest.employmentCondition) &&
        Objects.equals(this.remunerationSchedule, jobCreateRequest.remunerationSchedule) &&
        Objects.equals(this.recruitment, jobCreateRequest.recruitment) &&
        Objects.equals(this.customFields, jobCreateRequest.customFields)&&
        Objects.equals(this.additionalProperties, jobCreateRequest.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(person, companyStartDate, companyEndDate, startDate, endDate, name, businessEntity, businessUnit, establishment, supervisorPerson, supervisorJob, location, workClass, workType, fte, payGrade, employmentCondition, remunerationSchedule, recruitment, customFields, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobCreateRequest {\n");
    sb.append("    person: ").append(toIndentedString(person)).append("\n");
    sb.append("    companyStartDate: ").append(toIndentedString(companyStartDate)).append("\n");
    sb.append("    companyEndDate: ").append(toIndentedString(companyEndDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    businessEntity: ").append(toIndentedString(businessEntity)).append("\n");
    sb.append("    businessUnit: ").append(toIndentedString(businessUnit)).append("\n");
    sb.append("    establishment: ").append(toIndentedString(establishment)).append("\n");
    sb.append("    supervisorPerson: ").append(toIndentedString(supervisorPerson)).append("\n");
    sb.append("    supervisorJob: ").append(toIndentedString(supervisorJob)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    workClass: ").append(toIndentedString(workClass)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    fte: ").append(toIndentedString(fte)).append("\n");
    sb.append("    payGrade: ").append(toIndentedString(payGrade)).append("\n");
    sb.append("    employmentCondition: ").append(toIndentedString(employmentCondition)).append("\n");
    sb.append("    remunerationSchedule: ").append(toIndentedString(remunerationSchedule)).append("\n");
    sb.append("    recruitment: ").append(toIndentedString(recruitment)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("person");
    openapiFields.add("companyStartDate");
    openapiFields.add("companyEndDate");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("name");
    openapiFields.add("businessEntity");
    openapiFields.add("businessUnit");
    openapiFields.add("establishment");
    openapiFields.add("supervisorPerson");
    openapiFields.add("supervisorJob");
    openapiFields.add("location");
    openapiFields.add("workClass");
    openapiFields.add("workType");
    openapiFields.add("fte");
    openapiFields.add("payGrade");
    openapiFields.add("employmentCondition");
    openapiFields.add("remunerationSchedule");
    openapiFields.add("recruitment");
    openapiFields.add("customFields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("person");
    openapiRequiredFields.add("companyStartDate");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("businessEntity");
    openapiRequiredFields.add("businessUnit");
    openapiRequiredFields.add("workClass");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobCreateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobCreateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobCreateRequest is not found in the empty JSON string", JobCreateRequest.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : JobCreateRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the required field `person`
      JobCreateRequestPerson.validateJsonObject(jsonObj.getAsJsonObject("person"));
      if (!jsonObj.get("companyStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyStartDate").toString()));
      }
      if ((jsonObj.get("companyEndDate") != null && !jsonObj.get("companyEndDate").isJsonNull()) && !jsonObj.get("companyEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyEndDate").toString()));
      }
      if ((jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) && !jsonObj.get("startDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startDate").toString()));
      }
      if ((jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) && !jsonObj.get("endDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endDate").toString()));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the required field `businessEntity`
      JobCreateRequestBusinessEntity.validateJsonObject(jsonObj.getAsJsonObject("businessEntity"));
      // validate the required field `businessUnit`
      JobCreateRequestBusinessUnit.validateJsonObject(jsonObj.getAsJsonObject("businessUnit"));
      // validate the optional field `establishment`
      if (jsonObj.get("establishment") != null && !jsonObj.get("establishment").isJsonNull()) {
        JobCreateRequestEstablishment.validateJsonObject(jsonObj.getAsJsonObject("establishment"));
      }
      // validate the optional field `supervisorPerson`
      if (jsonObj.get("supervisorPerson") != null && !jsonObj.get("supervisorPerson").isJsonNull()) {
        JobCreateRequestSupervisorPerson.validateJsonObject(jsonObj.getAsJsonObject("supervisorPerson"));
      }
      // validate the optional field `supervisorJob`
      if (jsonObj.get("supervisorJob") != null && !jsonObj.get("supervisorJob").isJsonNull()) {
        JobCreateRequestSupervisorJob.validateJsonObject(jsonObj.getAsJsonObject("supervisorJob"));
      }
      // validate the optional field `location`
      if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
        JobCreateRequestLocation.validateJsonObject(jsonObj.getAsJsonObject("location"));
      }
      // validate the required field `workClass`
      JobCreateRequestWorkClass.validateJsonObject(jsonObj.getAsJsonObject("workClass"));
      // validate the optional field `workType`
      if (jsonObj.get("workType") != null && !jsonObj.get("workType").isJsonNull()) {
        JobCreateRequestWorkType.validateJsonObject(jsonObj.getAsJsonObject("workType"));
      }
      if ((jsonObj.get("fte") != null && !jsonObj.get("fte").isJsonNull()) && !jsonObj.get("fte").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fte` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fte").toString()));
      }
      // validate the optional field `payGrade`
      if (jsonObj.get("payGrade") != null && !jsonObj.get("payGrade").isJsonNull()) {
        JobCreateRequestPayGrade.validateJsonObject(jsonObj.getAsJsonObject("payGrade"));
      }
      // validate the optional field `employmentCondition`
      if (jsonObj.get("employmentCondition") != null && !jsonObj.get("employmentCondition").isJsonNull()) {
        JobCreateRequestEmploymentCondition.validateJsonObject(jsonObj.getAsJsonObject("employmentCondition"));
      }
      // validate the optional field `remunerationSchedule`
      if (jsonObj.get("remunerationSchedule") != null && !jsonObj.get("remunerationSchedule").isJsonNull()) {
        JobCreateRequestRemunerationSchedule.validateJsonObject(jsonObj.getAsJsonObject("remunerationSchedule"));
      }
      // validate the optional field `recruitment`
      if (jsonObj.get("recruitment") != null && !jsonObj.get("recruitment").isJsonNull()) {
        JobCreateRequestRecruitment.validateJsonObject(jsonObj.getAsJsonObject("recruitment"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<JobCreateRequest>() {
           @Override
           public void write(JsonWriter out, JobCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public JobCreateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             JobCreateRequest instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobCreateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobCreateRequest
  * @throws IOException if the JSON string is invalid with respect to JobCreateRequest
  */
  public static JobCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobCreateRequest.class);
  }

 /**
  * Convert an instance of JobCreateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

