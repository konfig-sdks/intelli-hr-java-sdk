/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BusinessEntitiesCreateRequestCustomFieldsValue;
import com.konfigthis.client.model.BusinessEntitiesPatchRequestCustomFieldsValue;
import com.konfigthis.client.model.People;
import com.konfigthis.client.model.PeopleCreateRequest;
import com.konfigthis.client.model.PeopleCreateRequestAddressesInner;
import com.konfigthis.client.model.PeopleCreateRequestEmailAddressesInner;
import com.konfigthis.client.model.PeopleCreateRequestEmergencyContact;
import com.konfigthis.client.model.PeopleCreateRequestMedicalConditionsInner;
import com.konfigthis.client.model.PeopleCreateRequestPhoneNumbersInner;
import com.konfigthis.client.model.PeopleCreateRequestWorkRight;
import com.konfigthis.client.model.PeopleList;
import com.konfigthis.client.model.PeopleListAllPeopleFiltersParameter;
import com.konfigthis.client.model.PeopleUpdateRequest;
import com.konfigthis.client.model.PeopleUpdateRequestAddressesInner;
import com.konfigthis.client.model.PeopleUpdateRequestEmailAddressesInner;
import com.konfigthis.client.model.PeopleUpdateRequestEmergencyContact;
import com.konfigthis.client.model.PeopleUpdateRequestMedicalConditionsInner;
import com.konfigthis.client.model.PeopleUpdateRequestPhoneNumbersInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PeopleApi
 */
@Disabled
public class PeopleApiTest {

    private static PeopleApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PeopleApi(apiClient);
    }

    /**
     * 
     *
     * Create a person
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewPersonTest() throws ApiException {
        String lastName = null;
        Object title = null;
        Object firstName = null;
        Object middleName = null;
        Object preferredName = null;
        Object dateOfBirth = null;
        String gender = null;
        Object employeeNumber = null;
        PeopleCreateRequestEmergencyContact emergencyContact = null;
        Object primaryEmailAddress = null;
        Object primaryPhoneNumber = null;
        List<PeopleCreateRequestEmailAddressesInner> emailAddresses = null;
        List<PeopleCreateRequestPhoneNumbersInner> phoneNumbers = null;
        List<PeopleCreateRequestAddressesInner> addresses = null;
        Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> customFields = null;
        List<PeopleCreateRequestMedicalConditionsInner> medicalConditions = null;
        PeopleCreateRequestWorkRight workRight = null;
        Object workRightExpiryDate = null;
        Object userAccount = null;
        People response = api.createNewPerson(lastName)
                .title(title)
                .firstName(firstName)
                .middleName(middleName)
                .preferredName(preferredName)
                .dateOfBirth(dateOfBirth)
                .gender(gender)
                .employeeNumber(employeeNumber)
                .emergencyContact(emergencyContact)
                .primaryEmailAddress(primaryEmailAddress)
                .primaryPhoneNumber(primaryPhoneNumber)
                .emailAddresses(emailAddresses)
                .phoneNumbers(phoneNumbers)
                .addresses(addresses)
                .customFields(customFields)
                .medicalConditions(medicalConditions)
                .workRight(workRight)
                .workRightExpiryDate(workRightExpiryDate)
                .userAccount(userAccount)
                .execute();
        // TODO: test validations
    }

    /**
     * Find a Person by ID
     *
     * Get a single Person record by UUIDv4 identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findByIdTest() throws ApiException {
        People response = api.findById()
                .execute();
        // TODO: test validations
    }

    /**
     * List all people
     *
     * Returns a list of all [People](https://developers.intellihr.io/docs/v1/) as at the current date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllPeopleTest() throws ApiException {
        PeopleListAllPeopleFiltersParameter filters = null;
        String sort = null;
        PeopleList response = api.listAllPeople()
                .filters(filters)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * 
     *
     * Update a person
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePersonByIdTest() throws ApiException {
        Object title = null;
        Object firstName = null;
        Object middleName = null;
        String lastName = null;
        Object preferredName = null;
        Object dateOfBirth = null;
        String gender = null;
        Object employeeNumber = null;
        PeopleUpdateRequestEmergencyContact emergencyContact = null;
        List<PeopleUpdateRequestEmailAddressesInner> emailAddresses = null;
        List<PeopleUpdateRequestPhoneNumbersInner> phoneNumbers = null;
        List<PeopleUpdateRequestAddressesInner> addresses = null;
        Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> customFields = null;
        List<PeopleUpdateRequestMedicalConditionsInner> medicalConditions = null;
        Object workRight = null;
        Object workRightExpiryDate = null;
        People response = api.updatePersonById()
                .title(title)
                .firstName(firstName)
                .middleName(middleName)
                .lastName(lastName)
                .preferredName(preferredName)
                .dateOfBirth(dateOfBirth)
                .gender(gender)
                .employeeNumber(employeeNumber)
                .emergencyContact(emergencyContact)
                .emailAddresses(emailAddresses)
                .phoneNumbers(phoneNumbers)
                .addresses(addresses)
                .customFields(customFields)
                .medicalConditions(medicalConditions)
                .workRight(workRight)
                .workRightExpiryDate(workRightExpiryDate)
                .execute();
        // TODO: test validations
    }

}
