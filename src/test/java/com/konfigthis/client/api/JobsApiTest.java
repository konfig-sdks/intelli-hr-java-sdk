/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.BusinessEntitiesCreateRequestCustomFieldsValue;
import com.konfigthis.client.model.BusinessEntitiesPatchRequestCustomFieldsValue;
import com.konfigthis.client.model.JobCreateRequest;
import com.konfigthis.client.model.JobCreateRequestBusinessEntity;
import com.konfigthis.client.model.JobCreateRequestBusinessUnit;
import com.konfigthis.client.model.JobCreateRequestEmploymentCondition;
import com.konfigthis.client.model.JobCreateRequestEstablishment;
import com.konfigthis.client.model.JobCreateRequestLocation;
import com.konfigthis.client.model.JobCreateRequestPayGrade;
import com.konfigthis.client.model.JobCreateRequestPerson;
import com.konfigthis.client.model.JobCreateRequestRecruitment;
import com.konfigthis.client.model.JobCreateRequestRemunerationSchedule;
import com.konfigthis.client.model.JobCreateRequestSupervisorJob;
import com.konfigthis.client.model.JobCreateRequestSupervisorPerson;
import com.konfigthis.client.model.JobCreateRequestWorkClass;
import com.konfigthis.client.model.JobCreateRequestWorkType;
import com.konfigthis.client.model.JobCreateResponse;
import com.konfigthis.client.model.JobPatchRequest;
import com.konfigthis.client.model.JobPatchRequestBusinessEntity;
import com.konfigthis.client.model.JobPatchRequestBusinessUnit;
import com.konfigthis.client.model.JobPatchRequestEmploymentCondition;
import com.konfigthis.client.model.JobPatchRequestEstablishment;
import com.konfigthis.client.model.JobPatchRequestJobChangeReason;
import com.konfigthis.client.model.JobPatchRequestLocation;
import com.konfigthis.client.model.JobPatchRequestPayGrade;
import com.konfigthis.client.model.JobPatchRequestRemunerationSchedule;
import com.konfigthis.client.model.JobPatchRequestSupervisorJob;
import com.konfigthis.client.model.JobPatchRequestSupervisorPerson;
import com.konfigthis.client.model.JobPatchRequestWorkClass;
import com.konfigthis.client.model.JobPatchRequestWorkType;
import com.konfigthis.client.model.JobPatchResponse;
import com.konfigthis.client.model.Jobs;
import com.konfigthis.client.model.JobsGetAllFiltersParameter;
import com.konfigthis.client.model.JobsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for JobsApi
 */
@Disabled
public class JobsApiTest {

    private static JobsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new JobsApi(apiClient);
    }

    /**
     * Create a new Job
     *
     * Create a new Job record with the provided data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRecordTest() throws ApiException {
        JobCreateRequestPerson person = null;
        String companyStartDate = null;
        String name = null;
        JobCreateRequestBusinessEntity businessEntity = null;
        JobCreateRequestBusinessUnit businessUnit = null;
        JobCreateRequestWorkClass workClass = null;
        String companyEndDate = null;
        String startDate = null;
        String endDate = null;
        JobCreateRequestEstablishment establishment = null;
        JobCreateRequestSupervisorPerson supervisorPerson = null;
        JobCreateRequestSupervisorJob supervisorJob = null;
        JobCreateRequestLocation location = null;
        JobCreateRequestWorkType workType = null;
        String fte = null;
        JobCreateRequestPayGrade payGrade = null;
        JobCreateRequestEmploymentCondition employmentCondition = null;
        JobCreateRequestRemunerationSchedule remunerationSchedule = null;
        JobCreateRequestRecruitment recruitment = null;
        Map<String, BusinessEntitiesCreateRequestCustomFieldsValue> customFields = null;
        JobCreateResponse response = api.createRecord(person, companyStartDate, name, businessEntity, businessUnit, workClass)
                .companyEndDate(companyEndDate)
                .startDate(startDate)
                .endDate(endDate)
                .establishment(establishment)
                .supervisorPerson(supervisorPerson)
                .supervisorJob(supervisorJob)
                .location(location)
                .workType(workType)
                .fte(fte)
                .payGrade(payGrade)
                .employmentCondition(employmentCondition)
                .remunerationSchedule(remunerationSchedule)
                .recruitment(recruitment)
                .customFields(customFields)
                .execute();
        // TODO: test validations
    }

    /**
     * Find a Job by ID
     *
     * Get a single Job record by UUIDv4 identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findByIdTest() throws ApiException {
        String asAt = null;
        Jobs response = api.findById()
                .asAt(asAt)
                .execute();
        // TODO: test validations
    }

    /**
     * List all Jobs
     *
     * Returns a list of all [Job](https://developers.intellihr.io/docs/v1/) entity records as at the current date.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTest() throws ApiException {
        JobsGetAllFiltersParameter filters = null;
        String sort = null;
        JobsList response = api.getAll()
                .filters(filters)
                .sort(sort)
                .execute();
        // TODO: test validations
    }

    /**
     * Patch an existing Job
     *
     * Patch attributes of an existing Job record with the provided data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAttributesTest() throws ApiException {
        Object effectiveFrom = null;
        String effectiveTo = null;
        String name = null;
        JobPatchRequestBusinessEntity businessEntity = null;
        JobPatchRequestBusinessUnit businessUnit = null;
        JobPatchRequestEstablishment establishment = null;
        JobPatchRequestJobChangeReason jobChangeReason = null;
        JobPatchRequestSupervisorPerson supervisorPerson = null;
        JobPatchRequestSupervisorJob supervisorJob = null;
        JobPatchRequestLocation location = null;
        JobPatchRequestWorkClass workClass = null;
        JobPatchRequestWorkType workType = null;
        String fte = null;
        JobPatchRequestPayGrade payGrade = null;
        JobPatchRequestEmploymentCondition employmentCondition = null;
        JobPatchRequestRemunerationSchedule remunerationSchedule = null;
        Map<String, BusinessEntitiesPatchRequestCustomFieldsValue> customFields = null;
        JobPatchResponse response = api.updateAttributes(effectiveFrom)
                .effectiveTo(effectiveTo)
                .name(name)
                .businessEntity(businessEntity)
                .businessUnit(businessUnit)
                .establishment(establishment)
                .jobChangeReason(jobChangeReason)
                .supervisorPerson(supervisorPerson)
                .supervisorJob(supervisorJob)
                .location(location)
                .workClass(workClass)
                .workType(workType)
                .fte(fte)
                .payGrade(payGrade)
                .employmentCondition(employmentCondition)
                .remunerationSchedule(remunerationSchedule)
                .customFields(customFields)
                .execute();
        // TODO: test validations
    }

}
