/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.QualificationInstancesCreateRequest;
import com.konfigthis.client.model.QualificationInstancesListAllFiltersParameter;
import com.konfigthis.client.model.QualificationInstancesPatchRequest;
import com.konfigthis.client.model.Qualifications;
import com.konfigthis.client.model.QualificationsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QualificationInstancesApi
 */
@Disabled
public class QualificationInstancesApiTest {

    private static QualificationInstancesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new QualificationInstancesApi(apiClient);
    }

    /**
     * Create a new Qualification Instance
     *
     * Returns the created [Qualification Instance](https://developers.intellihr.io/docs/v1/).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewInstanceTest() throws ApiException {
        String personId = null;
        String qualificationLibraryItemId = null;
        String status = null;
        Object issuingOrganisation = null;
        Object registrationNumber = null;
        Object issueDate = null;
        Object expiryDate = null;
        Object expiryNotificationQueuedAt = null;
        Object notes = null;
        Qualifications response = api.createNewInstance(personId, qualificationLibraryItemId, status)
                .issuingOrganisation(issuingOrganisation)
                .registrationNumber(registrationNumber)
                .issueDate(issueDate)
                .expiryDate(expiryDate)
                .expiryNotificationQueuedAt(expiryNotificationQueuedAt)
                .notes(notes)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete a Qualification Instance by ID
     *
     * Deletes the [Qualification Instance](https://developers.intellihr.io/docs/v1/) by the given ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteByIdTest() throws ApiException {
        api.deleteById()
                .execute();
        // TODO: test validations
    }

    /**
     * Find a Qualification Instance by ID
     *
     * Returns a single [Qualification Instance](https://developers.intellihr.io/docs/v1/) by its identifier.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findByIdTest() throws ApiException {
        Qualifications response = api.findById()
                .execute();
        // TODO: test validations
    }

    /**
     * List all Qualification Instances
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAllTest() throws ApiException {
        QualificationInstancesListAllFiltersParameter filters = null;
        QualificationsList response = api.listAll()
                .filters(filters)
                .execute();
        // TODO: test validations
    }

    /**
     * Update a Qualification Instance by ID
     *
     * Returns the updated [Qualification Instance](https://developers.intellihr.io/docs/v1/).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInstanceByIdTest() throws ApiException {
        String status = null;
        Object issuingOrganisation = null;
        Object registrationNumber = null;
        Object issueDate = null;
        Object expiryDate = null;
        Object expiryNotificationQueuedAt = null;
        Object notes = null;
        Qualifications response = api.updateInstanceById()
                .status(status)
                .issuingOrganisation(issuingOrganisation)
                .registrationNumber(registrationNumber)
                .issueDate(issueDate)
                .expiryDate(expiryDate)
                .expiryNotificationQueuedAt(expiryNotificationQueuedAt)
                .notes(notes)
                .execute();
        // TODO: test validations
    }

}
