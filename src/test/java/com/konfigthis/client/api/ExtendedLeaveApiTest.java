/*
 * intelliHR Public API
 * You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)
 *
 * The version of the OpenAPI document: V1
 * Contact: support@intellihr.co
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.LeaveCreateRequest;
import com.konfigthis.client.model.LeaveCreateRequestLeaveType;
import com.konfigthis.client.model.LeaveCreateResponse;
import com.konfigthis.client.model.LeaveUpdateRequest;
import com.konfigthis.client.model.LeaveUpdateRequestLeaveType;
import com.konfigthis.client.model.LeaveUpdateResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExtendedLeaveApi
 */
@Disabled
public class ExtendedLeaveApiTest {

    private static ExtendedLeaveApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ExtendedLeaveApi(apiClient);
    }

    /**
     * Create Extended Leave
     *
     * Create a new Extended Leave on an existing Job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createNewTest() throws ApiException {
        String jobId = null;
        String startDate = null;
        String endDate = null;
        LeaveCreateRequestLeaveType leaveType = null;
        String fte = null;
        LeaveCreateResponse response = api.createNew(jobId, startDate, endDate, leaveType)
                .fte(fte)
                .execute();
        // TODO: test validations
    }

    /**
     * Update or Finalise Extended Leave
     *
     * Update or Finalise an existing Extended Leave.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFinaliseTest() throws ApiException {
        String jobId = null;
        String endDate = null;
        Boolean shouldNotFinaliseEndDate = null;
        String startDate = null;
        LeaveUpdateRequestLeaveType leaveType = null;
        String fte = null;
        LeaveUpdateResponse response = api.updateFinalise(jobId, endDate)
                .shouldNotFinaliseEndDate(shouldNotFinaliseEndDate)
                .startDate(startDate)
                .leaveType(leaveType)
                .fte(fte)
                .execute();
        // TODO: test validations
    }

}
